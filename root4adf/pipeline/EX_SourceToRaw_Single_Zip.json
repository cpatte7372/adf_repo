{
	"name": "EX_SourceToRaw_Single_Zip",
	"properties": {
		"activities": [
			{
				"name": "Start Process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Process].[StartProcess]",
					"storedProcedureParameters": {
						"ADFExecution": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ProcessID": {
							"value": {
								"value": "@pipeline().parameters.ProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SetFileMask",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "FilenameMask",
					"value": {
						"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SetRecursiveFlag",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RecursiveFlag",
					"value": {
						"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy File to Archive BLOB",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetFileMask",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SetRecursiveFlag",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": {
								"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_BLOB_Landing_DYN_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"Path": {
								"value": "@pipeline().parameters.Path",
								"type": "Expression"
							},
							"Container": {
								"value": "@pipeline().parameters.PathRoute",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_BLOB_Landing_DYN_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"Path": {
								"value": "@concat(pipeline().parameters.Path,'/Archive')",
								"type": "Expression"
							},
							"Container": {
								"value": "@pipeline().parameters.PathRoute",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy File to Lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy File to Archive BLOB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": {
								"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings",
							"compressionProperties": {
								"type": "ZipDeflateReadSettings"
							}
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_BLOB_Landing_DYN_ZIP",
						"type": "DatasetReference",
						"parameters": {
							"Path": {
								"value": "@pipeline().parameters.Path",
								"type": "Expression"
							},
							"Container": {
								"value": "@pipeline().parameters.PathRoute",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ALDS_RAW_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"Directory": {
								"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Log Process Throughput",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy File to Lake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Process].[LogThroughput]",
					"storedProcedureParameters": {
						"CountName": {
							"value": "rowsCopied",
							"type": "String"
						},
						"CountValue": {
							"value": {
								"value": "@activity('Copy File to Lake').output.filesRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"ProcessID": {
							"value": {
								"value": "@pipeline().parameters.ProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Fail Process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy File to Lake",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Process].[FailProcess]",
					"storedProcedureParameters": {
						"ProcessID": {
							"value": {
								"value": "@pipeline().parameters.ProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Finalise Process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Process Throughput",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Process].[FinaliseProcess]",
					"storedProcedureParameters": {
						"ProcessID": {
							"value": {
								"value": "@pipeline().parameters.ProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Fail Process From Log Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Log Process Throughput",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Process].[FailProcess]",
					"storedProcedureParameters": {
						"ProcessID": {
							"value": {
								"value": "@pipeline().parameters.ProcessID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "string",
				"defaultValue": "CashSales"
			},
			"Zone": {
				"type": "string",
				"defaultValue": "RAW"
			},
			"Year": {
				"type": "string",
				"defaultValue": "2020"
			},
			"Month": {
				"type": "string",
				"defaultValue": "11"
			},
			"Day": {
				"type": "string",
				"defaultValue": "02"
			},
			"Area": {
				"type": "string",
				"defaultValue": "MuleSoft"
			},
			"Domain": {
				"type": "string",
				"defaultValue": "StarKis"
			},
			"Classification": {
				"type": "string",
				"defaultValue": "Internal"
			},
			"EntityStageID": {
				"type": "string",
				"defaultValue": "51"
			},
			"ProcessID": {
				"type": "int",
				"defaultValue": 999
			},
			"Version": {
				"type": "string",
				"defaultValue": "1"
			},
			"SlicePath": {
				"type": "string"
			},
			"Time": {
				"type": "string",
				"defaultValue": "00:00"
			},
			"FileFormat": {
				"type": "string",
				"defaultValue": "CSV"
			},
			"Path": {
				"type": "string",
				"defaultValue": "import/starkis/UK"
			},
			"PathRoute": {
				"type": "string"
			},
			"Config": {
				"type": "object"
			}
		},
		"variables": {
			"FilenameMask": {
				"type": "String"
			},
			"RecursiveFlag": {
				"type": "String"
			},
			"UnzipFlag": {
				"type": "String"
			}
		},
		"folder": {
			"name": "0 - Source2Raw/Initiation"
		},
		"annotations": [],
		"lastPublishTime": "2021-12-13T17:30:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}