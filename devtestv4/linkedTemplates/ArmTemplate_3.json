{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "devtestv4"
		},
		"AzureSynapseAnalytics802MEP_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"AzureSynapseAnalytics802MEP_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"Purviewendpointstest_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/Montagu/providers/Microsoft.Purview/accounts/MontaguPurview"
		},
		"Purviewendpointstest_properties_groupId": {
			"type": "string",
			"defaultValue": "account"
		},
		"Purviewendpointstest_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"montagupurview.purview.azure.com"
			]
		},
		"Purviewendpointstest_blob_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.Storage/storageAccounts/scanuksouthrpqzvxo"
		},
		"Purviewendpointstest_blob_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"Purviewendpointstest_blob_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"scanuksouthrpqzvxo.blob.core.windows.net"
			]
		},
		"Purviewendpointstest_namespace_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.EventHub/namespaces/Atlas-d26807bb-c695-4d5e-a987-2852e4651aee"
		},
		"Purviewendpointstest_namespace_properties_groupId": {
			"type": "string",
			"defaultValue": "namespace"
		},
		"Purviewendpointstest_namespace_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"Atlas-d26807bb-c695-4d5e-a987-2852e4651aee.servicebus.windows.net"
			]
		},
		"Purviewendpointstest_queue_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.Storage/storageAccounts/scanuksouthrpqzvxo"
		},
		"Purviewendpointstest_queue_properties_groupId": {
			"type": "string",
			"defaultValue": "queue"
		},
		"Purviewendpointstest_queue_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"scanuksouthrpqzvxo.queue.core.windows.net"
			]
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Storage/storageAccounts/prodlakeaccuks01"
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prodlakeaccuks01.dfs.core.windows.net"
			]
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Storage/storageAccounts/testdatalakeuks01"
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"testdatalakeuks01.dfs.core.windows.net"
			]
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prod-synapse-uks-001.e52c8ab6-b121-4230-90fb-786ac6c216cb.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Synapse/workspaces/test-ws-synapse-uks-01"
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"test-ws-synapse-uks-01.ac774afe-0375-4efe-86ec-bb2fc2a14fbc.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prod-synapse-uks-001-ondemand.e52c8ab6-b121-4230-90fb-786ac6c216cb.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Synapse/workspaces/test-ws-synapse-uks-01"
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"test-ws-synapse-uks-01-ondemand.ac774afe-0375-4efe-86ec-bb2fc2a14fbc.sql.azuresynapse.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSynapseAnalytics802MEP')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSynapseAnalytics802MEP_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSynapseAnalytics802MEP_properties_groupId')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_blob')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_blob_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_blob_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_blob_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_namespace')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_namespace_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_namespace_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_namespace_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_queue')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_queue_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_queue_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_queue_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--prod-synapse-uks-001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--test-ws-synapse-uks-01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--prod-synapse-uks-001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--test-ws-synapse-uks-01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T16:17:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-18T21:21:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								" CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								" EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/E2C_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - NewEnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T10:12:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-22T20:59:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T16:25:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Table to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().parameters.Domain,'.',pipeline().parameters.TableName)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_RAW1",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									},
									"Entity": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy Table to Lake').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T14:26:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PE_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Utilities/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.stageName",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessId": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"EntityStageId": {
						"type": "string"
					},
					"stageName": {
						"type": "string",
						"defaultValue": "POST"
					}
				},
				"folder": {
					"name": "4 - PostExecution"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:51:59Z"
			},
			"dependsOn": []
		}
	]
}