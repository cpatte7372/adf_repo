{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "devtestv4"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureSQLEnrichedServerless_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQLEnrichedServerless'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001-ondemand.sql.azuresynapse.net;Initial Catalog=DataverseEnriched"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=synapseworksparcev4.sql.azuresynapse.net;Initial Catalog=testsadpool"
		},
		"ChoiceDB DataverseEnriched_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ChoiceDB DataverseEnriched'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001-ondemand.sql.azuresynapse.net;Initial Catalog=DataverseEnriched"
		},
		"DedicatedPoolInsight_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DedicatedPoolInsight'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001.sql.azuresynapse.net;Initial Catalog=Insights"
		},
		"EnrichedDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'EnrichedDatabase'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001-ondemand.sql.azuresynapse.net;Initial Catalog=DataverseEnriched"
		},
		"InsightsAzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'InsightsAzureSynapseAnalytics'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001.sql.azuresynapse.net;Initial Catalog=DedicatedSQLPool"
		},
		"LB_DBX_EngineeringSml_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LB_DBX_EngineeringSml'"
		},
		"LS_ADLS_PRIVATE_DYN_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_PRIVATE_DYN'"
		},
		"LS_BLOB_PRIVATE_DYN_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB_PRIVATE_DYN'"
		},
		"LS_FIVERR_SQL_AnalyticsHub_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FIVERR_SQL_AnalyticsHub'"
		},
		"LS_Metadata_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Metadata_SQL'"
		},
		"LS_SQL_AnalyticsHub_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_AnalyticsHub'"
		},
		"LS_SQL_PretBIReference_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_PretBIReference'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=test-ws-synapse-uks-01-ondemand.sql.azuresynapse.net;Initial Catalog=dataverse_testb_unqd627dc8d885044ee87837a5345b30"
		},
		"MyOrigination_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MyOrigination'"
		},
		"ReportsAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ReportsAnalytics'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001.sql.azuresynapse.net;Initial Catalog=DedicatedSQLPool"
		},
		"ReportsSLLinkedSVC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ReportsSLLinkedSVC'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001-ondemand.sql.azuresynapse.net;Initial Catalog=ReportsSL"
		},
		"ReportsSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ReportsSql'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001.sql.azuresynapse.net;Initial Catalog=ReportsDW"
		},
		"ServerLessSQL2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ServerLessSQL2'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=prod-synapse-uks-001-ondemand.sql.azuresynapse.net;Initial Catalog=dataverse_montagu_org5a2bcccf"
		},
		"mssfttestworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'mssfttestworkspace-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:mssfttestworkspace.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"prod-synapse-uks-001-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'prod-synapse-uks-001-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:prod-synapse-uks-001.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"synapseworksparcev4-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapseworksparcev4-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapseworksparcev4.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"test-ws-synapse-uks-01-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'test-ws-synapse-uks-01-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:test-ws-synapse-uks-01.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ADLSLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prodlakeaccuks01.dfs.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testdatalakeuks01.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prodlakeaccuks01.dfs.core.windows.net"
		},
		"AzureKeyVaultClientsecretSynapse_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://MontaguKeyVault.vault.azure.net/"
		},
		"DueDil_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://duedil.io/v4/company"
		},
		"LB_DBX_EngineeringSml_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0530-194702-1mjaol87"
		},
		"LS_ADLS_PRIVATE_DYN_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prodlakeaccuks01.dfs.core.windows.net/"
		},
		"LinkedServiceCDM_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prodlakeaccuks01.dfs.core.windows.net"
		},
		"SynapseDataAzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://MontaguKeyVault.vault.azure.net/"
		},
		"mssfttestworkspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testdatalakeuks01.dfs.core.windows.net"
		},
		"prod-synapse-uks-001-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prodlakeaccuks01.dfs.core.windows.net"
		},
		"synapseworksparcev4-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsworkspacev2.dfs.core.windows.net"
		},
		"test-ws-synapse-uks-01-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testdatalakeuks01.dfs.core.windows.net"
		},
		"ADLSProdEndpoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Storage/storageAccounts/prodlakeaccuks02"
		},
		"ADLSProdEndpoint_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"ADLSProdEndpoint_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prodlakeaccuks02.dfs.core.windows.net"
			]
		},
		"AzureDataLakeStorageMEP4_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Storage/storageAccounts/prodlakeaccuks01"
		},
		"AzureDataLakeStorageMEP4_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"AzureDataLakeStorageMEP4_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prodlakeaccuks01.dfs.core.windows.net"
			]
		},
		"AzureSqlDatabaseMEP2_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-mrg-synapse-uks-01/providers/Microsoft.Sql/servers/test-ws-synapse-uks-01"
		},
		"AzureSqlDatabaseMEP2_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSynapseAnalytics802MEP_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"AzureSynapseAnalytics802MEP_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"Purviewendpointstest_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/Montagu/providers/Microsoft.Purview/accounts/MontaguPurview"
		},
		"Purviewendpointstest_properties_groupId": {
			"type": "string",
			"defaultValue": "account"
		},
		"Purviewendpointstest_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"montagupurview.purview.azure.com"
			]
		},
		"Purviewendpointstest_blob_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.Storage/storageAccounts/scanuksouthrpqzvxo"
		},
		"Purviewendpointstest_blob_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"Purviewendpointstest_blob_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"scanuksouthrpqzvxo.blob.core.windows.net"
			]
		},
		"Purviewendpointstest_namespace_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.EventHub/namespaces/Atlas-d26807bb-c695-4d5e-a987-2852e4651aee"
		},
		"Purviewendpointstest_namespace_properties_groupId": {
			"type": "string",
			"defaultValue": "namespace"
		},
		"Purviewendpointstest_namespace_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"Atlas-d26807bb-c695-4d5e-a987-2852e4651aee.servicebus.windows.net"
			]
		},
		"Purviewendpointstest_queue_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/managed-rg-MontaguPurview/providers/Microsoft.Storage/storageAccounts/scanuksouthrpqzvxo"
		},
		"Purviewendpointstest_queue_properties_groupId": {
			"type": "string",
			"defaultValue": "queue"
		},
		"Purviewendpointstest_queue_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"scanuksouthrpqzvxo.queue.core.windows.net"
			]
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Storage/storageAccounts/prodlakeaccuks01"
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prodlakeaccuks01.dfs.core.windows.net"
			]
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Storage/storageAccounts/testdatalakeuks01"
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"testdatalakeuks01.dfs.core.windows.net"
			]
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--prod-synapse-uks-001_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prod-synapse-uks-001.e52c8ab6-b121-4230-90fb-786ac6c216cb.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Synapse/workspaces/test-ws-synapse-uks-01"
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"synapse-ws-sql--test-ws-synapse-uks-01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"test-ws-synapse-uks-01.ac774afe-0375-4efe-86ec-bb2fc2a14fbc.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/MontaguData/providers/Microsoft.Synapse/workspaces/prod-synapse-uks-001"
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"prod-synapse-uks-001-ondemand.e52c8ab6-b121-4230-90fb-786ac6c216cb.sql.azuresynapse.net"
			]
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/5c1bc415-b561-4700-9cbe-71f1079bb536/resourceGroups/test-rg-synapse-uks-01/providers/Microsoft.Synapse/workspaces/test-ws-synapse-uks-01"
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"test-ws-synapse-uks-01-ondemand.ac774afe-0375-4efe-86ec-bb2fc2a14fbc.sql.azuresynapse.net"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/B2E_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "ENR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Enrichment Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "B2E_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T14:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/B2E_Single')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T16:17:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-18T21:21:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								" CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								" EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DYN_EnrToCurated_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "CUR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Curation Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DBX_EnrichToCurated_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											},
											"Region": {
												"value": "@pipeline().parameters.Region",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Region": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-25T12:53:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/DBX_EnrichToCurated_Single')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/E2C_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "ENR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Enrichment Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Clone_B2E_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - NewEnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T10:12:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/Clone_B2E_Single')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/E2C_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - NewEnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T10:12:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "Raw"
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Get Entities to Copy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Entities to Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Entities to Copy').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Choose Pipeline Based on Source",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().FileFormat",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "SQL",
												"activities": [
													{
														"name": "Run Copy Pipeline Table",
														"description": "This has been moved to invoke the Zip PipeLine because it keeps on kicking of Databricaks. Otherwise, all is working well invoking EX_SourceToRaw_Single_Table - which is the pipeline it would kick of under normal circumstances",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "EX_SourceToRaw_Single_Table",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"TableName": {
																	"value": "@item().EntityName",
																	"type": "Expression"
																},
																"Zone": {
																	"value": "@item().StageName",
																	"type": "Expression"
																},
																"Year": {
																	"value": "@item().Year",
																	"type": "Expression"
																},
																"Month": {
																	"value": "@item().Month",
																	"type": "Expression"
																},
																"Day": {
																	"value": "@item().Day",
																	"type": "Expression"
																},
																"Domain": {
																	"value": "@item().Domain",
																	"type": "Expression"
																},
																"Classification": {
																	"value": "@item().Classification",
																	"type": "Expression"
																},
																"EntityStageID": {
																	"value": "@item().EntityStageID",
																	"type": "Expression"
																},
																"ProcessID": {
																	"value": "@item().ProcessID",
																	"type": "Expression"
																},
																"Version": {
																	"value": "@item().Version",
																	"type": "Expression"
																},
																"SlicePath": {
																	"value": "@item().SlicePath",
																	"type": "Expression"
																},
																"Time": {
																	"value": "@item().Time",
																	"type": "Expression"
																},
																"FileFormat": {
																	"value": "@item().FileFormat",
																	"type": "Expression"
																},
																"Area": {
																	"value": "@item().Area",
																	"type": "Expression"
																}
															}
														}
													}
												]
											},
											{
												"value": "CSV",
												"activities": [
													{
														"name": "Run Copy Pipeline CSV",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "EX_SourceToRaw_Single_CSV",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"TableName": {
																	"value": "@item().EntityName",
																	"type": "Expression"
																},
																"Zone": {
																	"value": "@item().StageName",
																	"type": "Expression"
																},
																"Year": {
																	"value": "@item().Year",
																	"type": "Expression"
																},
																"Month": {
																	"value": "@item().Month",
																	"type": "Expression"
																},
																"Day": {
																	"value": "@item().Day",
																	"type": "Expression"
																},
																"Area": {
																	"value": "@item().Area",
																	"type": "Expression"
																},
																"Domain": {
																	"value": "@item().Domain",
																	"type": "Expression"
																},
																"Classification": {
																	"value": "@item().Classification",
																	"type": "Expression"
																},
																"EntityStageID": {
																	"value": "@item().EntityStageID",
																	"type": "Expression"
																},
																"ProcessID": {
																	"value": "@item().ProcessID",
																	"type": "Expression"
																},
																"Version": {
																	"value": "@item().Version",
																	"type": "Expression"
																},
																"SlicePath": {
																	"value": "@item().SlicePath",
																	"type": "Expression"
																},
																"Time": {
																	"value": "@item().Time",
																	"type": "Expression"
																},
																"FileFormat": {
																	"value": "@item().FileFormat",
																	"type": "Expression"
																},
																"Path": {
																	"value": "@item().Path",
																	"type": "Expression"
																}
															}
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Run Copy Pipeline File",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "EX_SourceToRaw_Single_CSV",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TableName": {
															"value": "@item().EntityName",
															"type": "Expression"
														},
														"Zone": {
															"value": "@item().StageName",
															"type": "Expression"
														},
														"Year": {
															"value": "@item().Year",
															"type": "Expression"
														},
														"Month": {
															"value": "@item().Month",
															"type": "Expression"
														},
														"Day": {
															"value": "@item().Day",
															"type": "Expression"
														},
														"Area": {
															"value": "@item().Area",
															"type": "Expression"
														},
														"Domain": {
															"value": "@item().Domain",
															"type": "Expression"
														},
														"Classification": {
															"value": "@item().Classification",
															"type": "Expression"
														},
														"EntityStageID": {
															"value": "@item().EntityStageID",
															"type": "Expression"
														},
														"ProcessID": {
															"value": "@item().ProcessID",
															"type": "Expression"
														},
														"Version": {
															"value": "@item().Version",
															"type": "Expression"
														},
														"SlicePath": {
															"value": "@item().SlicePath",
															"type": "Expression"
														},
														"Time": {
															"value": "@item().Time",
															"type": "Expression"
														},
														"FileFormat": {
															"value": "@item().FileFormat",
															"type": "Expression"
														},
														"Path": {
															"value": "@item().Path",
															"type": "Expression"
														},
														"Config": {
															"value": "@json(item().Config)",
															"type": "Expression"
														},
														"PathRoute": {
															"value": "@item().PathRoute",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SliceDate": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T18:04:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/EX_SourceToRaw_Single_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/EX_SourceToRaw_Single_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-22T20:59:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_BINARY')]",
				"[concat(variables('factoryId'), '/datasets/DS_ALDS_RAW_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "CashSales"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"Month": {
						"type": "string",
						"defaultValue": "11"
					},
					"Day": {
						"type": "string",
						"defaultValue": "02"
					},
					"Area": {
						"type": "string",
						"defaultValue": "MuleSoft"
					},
					"Domain": {
						"type": "string",
						"defaultValue": "StarKis"
					},
					"Classification": {
						"type": "string",
						"defaultValue": "Internal"
					},
					"EntityStageID": {
						"type": "string",
						"defaultValue": "51"
					},
					"ProcessID": {
						"type": "string",
						"defaultValue": "999"
					},
					"Version": {
						"type": "string",
						"defaultValue": "1"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string",
						"defaultValue": "00:00"
					},
					"FileFormat": {
						"type": "string",
						"defaultValue": "CSV"
					},
					"Path": {
						"type": "string",
						"defaultValue": "import/starkis/UK"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-24T21:43:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T16:25:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_BINARY')]",
				"[concat(variables('factoryId'), '/datasets/DS_ALDS_RAW_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Table to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().parameters.Domain,'.',pipeline().parameters.TableName)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_RAW1",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									},
									"Entity": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy Table to Lake').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Initiation"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T14:26:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DYN')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_RAW1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute Main Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Main Load",
						"description": "testoday",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "new",
								"value": "user"
							}
						],
						"typeProperties": {
							"storedProcedureName": "remover",
							"storedProcedureParameters": {
								"Area": {
									"value": {
										"value": "@pipeline().parameters.Area",
										"type": "Expression"
									},
									"type": "String"
								},
								"Domain": {
									"value": {
										"value": "@pipeline().parameters.Domain",
										"type": "Expression"
									},
									"type": "String"
								},
								"Months": {
									"value": null,
									"type": "Int32"
								},
								"SliceDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy/MM/dd')",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Stage": {
									"value": "Raw",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Trigger Master Control",
						"description": "today",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Initiate Main Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "test",
								"value": "once"
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Master Control",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"SliceDate": {
									"value": "@pipeline().parameters.SliceDate",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								},
								"Region": {
									"value": "@pipeline().parameters.Region",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SliceDate": {
						"type": "string",
						"defaultValue": "testtoday"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Region": {
						"type": "string",
						"defaultValue": "-2"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T18:10:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/Master Control')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master Control')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Source to Raw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EX_SourceToRaw_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SliceDate": {
									"value": "@pipeline().parameters.SliceDate",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Raw to Base",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Source to Raw",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "R2B_CSV_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Base to Enrich",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Raw to Base",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "B2E_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Enrich To Curate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Base to Enrich",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DYN_EnrToCurated_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Region": {
									"value": "@pipeline().parameters.Region",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SliceDate": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"variables": {
					"EnrichJobs": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-18T19:51:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/EX_SourceToRaw_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/R2B_CSV_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/B2E_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/DYN_EnrToCurated_Parent')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master Control_With_Curated')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Source to Raw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EX_SourceToRaw_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SliceDate": {
									"value": "@pipeline().parameters.SliceDate",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Raw to Base",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Source to Raw",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "R2B_CSV_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Base to Enrich",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Raw to Base",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "B2E_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								},
								"Domain": {
									"value": "@pipeline().parameters.Domain",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Enrich To Curate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Base to Enrich",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DYN_EnrToCurated_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Region": {
									"value": "@pipeline().parameters.Region",
									"type": "Expression"
								},
								"Area": {
									"value": "@pipeline().parameters.Area",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Post Processing Maintenance",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Enrich To Curate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PE_Parent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Area": "Simphony"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SliceDate": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"variables": {
					"EnrichJobs": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:52:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/EX_SourceToRaw_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/R2B_CSV_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/B2E_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/DYN_EnrToCurated_Parent')]",
				"[concat(variables('factoryId'), '/pipelines/PE_Parent')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PE_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": "-1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Post Execution Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PE_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ProcessId": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											},
											"EntityStageId": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"stageName": {
												"value": "@item().StageName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Area": {
						"type": "string",
						"defaultValue": "Simphony"
					}
				},
				"folder": {
					"name": "4 - PostExecution"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:52:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/PE_Single')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PE_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Utilities/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.stageName",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProcessId": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"EntityStageId": {
						"type": "string"
					},
					"stageName": {
						"type": "string",
						"defaultValue": "POST"
					}
				},
				"folder": {
					"name": "4 - PostExecution"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:51:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/R2B_CSV_CleanseCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Cleanse CSV",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Validation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								},
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.Zone",
									"type": "Expression"
								},
								"entityName": {
									"value": "@pipeline().parameters.TableName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Cleanse CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Cleanse CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Good",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "goodRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.goodRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Reject",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rejectedRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.rejectedRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Total",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "totalRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.totalRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - DuplicateRows",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "duplicateRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.duplicateRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - validRows",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "validRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.validRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - RawToBase"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T14:12:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/R2B_CSV_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "Base"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Copy Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "R2B_CSV_CleanseCSV",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TableName": {
												"value": "@item().EntityName",
												"type": "Expression"
											},
											"Zone": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"Year": {
												"value": "@item().Year",
												"type": "Expression"
											},
											"Month": {
												"value": "@item().Month",
												"type": "Expression"
											},
											"Day": {
												"value": "@item().Day",
												"type": "Expression"
											},
											"Area": {
												"value": "@item().Area",
												"type": "Expression"
											},
											"Domain": {
												"value": "@item().Domain",
												"type": "Expression"
											},
											"Classification": {
												"value": "@item().Classification",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"Version": {
												"value": "@item().Version",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - RawToBase"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-07T16:15:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/pipelines/R2B_CSV_CleanseCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIPULL1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DueDil",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DueDil')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Appointment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "appointment"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The destination Azure SQL Table for the Dataverse data.",
				"linkedServiceName": {
					"referenceName": "ReportsSql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLTableName": {
						"type": "string",
						"defaultValue": "\"SQL Table Name\""
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQLTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The destination Azure SQL Table for the Dataverse data.",
				"linkedServiceName": {
					"referenceName": "ReportsSql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLTableName": {
						"type": "string",
						"defaultValue": "\"SQL Table Name\""
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQLTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "prod-synapse-uks-001-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedSQLPool"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "duedil"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "prod-synapse-uks-001-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "enrichedtables"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ServerLessSQL2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ts_lender"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ServerLessSQL2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacttable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_RAW1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"Entity": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "remove",
						"folderPath": {
							"value": "/@{dataset().Directory}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "techadmin",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ALDS_RAW_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "remove",
						"folderPath": {
							"value": "/@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": "root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AnalyticsHub_DYN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Process",
					"table": "remove"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_Landing_DYN_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "remove",
						"folderPath": {
							"value": "@dataset().Path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_Landing_DYN_ZIP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BLOB_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Metadata_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "config"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Application"
					}
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Metadata_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DYN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_PretBIReference",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "removetable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_PretBIReference')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lne')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_n7v')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_nyc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_t7r')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_wzj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoggingStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*",
						"folderPath": "RAW/LOGGING",
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Optionsettable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "optionset"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OriginationOpp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "OriginationOpportunities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Transforms Dataverse data CSV files to Parquet format in lands the new files in the  Table/Snapshot directory.",
				"linkedServiceName": {
					"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "\"Dataverse Container Name\""
					},
					"TableName": {
						"type": "string",
						"defaultValue": "\"Dataverse Table Name\""
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "concat(@dataset().TableName, \"/Snapshot\")",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "reports",
					"table": "Reports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsSL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsSLLinkedSVC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EntityName",
						"type": "nvarchar"
					},
					{
						"name": "OptionSetName",
						"type": "nvarchar"
					},
					{
						"name": "Option",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsUserLocalizedLabel",
						"type": "nvarchar"
					},
					{
						"name": "LocalizedLabelLanguageCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LocalizedLabel",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dt_origination"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsSLLinkedSVC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Systemusertable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "systemuser"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service ",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSLinkedService_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultClientsecretSynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultClientsecretSynapse_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLEnrichedServerless')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DB Enriched Serverless",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQLEnrichedServerless_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChoiceDB DataverseEnriched')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ChoiceDB DataverseEnriched_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DedicatedPoolInsight')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('DedicatedPoolInsight_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DueDil')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('DueDil_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EnrichedDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('EnrichedDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsightsAzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('InsightsAzureSynapseAnalytics_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LB_DBX_EngineeringSml')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4878855630349497.17.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LB_DBX_EngineeringSml_accessToken')]"
					},
					"existingClusterId": "[parameters('LB_DBX_EngineeringSml_properties_typeProperties_existingClusterId')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_PRIVATE_DYN')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "testdescription",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_PRIVATE_DYN_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_PRIVATE_DYN_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB_PRIVATE_DYN')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "rrwadf",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_PRIVATE_DYN_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FIVERR_SQL_AnalyticsHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_FIVERR_SQL_AnalyticsHub_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Metadata_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_Metadata_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_AnalyticsHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "adfd2",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_AnalyticsHub_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_PretBIReference')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "test2",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_PretBIReference_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServiceCDM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LinkedServiceCDM_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyOrigination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('MyOrigination_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset Linked Service",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ReportsAnalytics_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsPowerBI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Power BI Reporting",
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "6ca445fc-2a92-4d6e-8b51-1512ede98b84",
					"tenantID": "fca5641e-2829-432a-8b58-6259654f2a0e"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsSLLinkedSVC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ReportsSLLinkedSVC_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ReportsSql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServerLessSQL2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ServerLessSQL2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynapseDataAzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('SynapseDataAzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssfttestworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('mssfttestworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mssfttestworkspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('mssfttestworkspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-synapse-uks-001-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('prod-synapse-uks-001-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prod-synapse-uks-001-WorkspaceDefaultStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('prod-synapse-uks-001-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapseworksparcev4-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapseworksparcev4-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/synapseworksparcev4-WorkspaceDefaultStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapseworksparcev4-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-ws-synapse-uks-01-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('test-ws-synapse-uks-01-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test-ws-synapse-uks-01-WorkspaceDefaultStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('test-ws-synapse-uks-01-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReferenceDataOnceDaily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2021-09-06T16:24:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLAREA')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-04-01T14:44:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTables')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-12-13T10:54:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"copyComputeScaleProperties": {
							"dataIntegrationUnit": 4,
							"timeToLive": 5
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntime5')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"copyComputeScaleProperties": {
							"dataIntegrationUnit": 4,
							"timeToLive": 5
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "OriginationOppSourceSL"
						},
						{
							"linkedService": {
								"referenceName": "ReportsSLLinkedSVC",
								"type": "LinkedServiceReference"
							},
							"name": "OptionSetInSL"
						},
						{
							"name": "AccountInSourceSL"
						},
						{
							"name": "AppointmentInSourceSL"
						},
						{
							"name": "ContactsInSourceSL"
						},
						{
							"name": "SystemUserInSourceSL"
						},
						{
							"name": "GapOptionsetIn"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ReportsSL",
								"type": "DatasetReference"
							},
							"name": "OriginationSL"
						},
						{
							"linkedService": {
								"referenceName": "ReportsSLLinkedSVC",
								"type": "LinkedServiceReference"
							},
							"name": "OpionsetSLSink",
							"rejectedDataLinkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							}
						},
						{
							"linkedService": {
								"referenceName": "ReportsSLLinkedSVC",
								"type": "LinkedServiceReference"
							},
							"name": "GapOptionSetSinkSL"
						}
					],
					"transformations": [
						{
							"name": "OriginationSelectOutput"
						},
						{
							"name": "AccountSelectOutput"
						},
						{
							"name": "AppointmentSelectOutput"
						},
						{
							"name": "ContactSelectOutput"
						},
						{
							"name": "SystemUserSelectInSL"
						},
						{
							"name": "OptionSetPivotSL"
						},
						{
							"name": "GapOptionSetOutputSL"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "unpivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOppSourceSL",
						"source(output(",
						"          EntityName as string,",
						"          OptionSetName as string,",
						"          Option as integer,",
						"          IsUserLocalizedLabel as string,",
						"          LocalizedLabelLanguageCode as integer,",
						"          LocalizedLabel as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'optionview',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> OptionSetInSL",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          msdyn_salesaccelerationinsightidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountInSourceSL",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> AppointmentInSourceSL",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsInSourceSL",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> SystemUserInSourceSL",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          organizationid as string,",
						"          organizationid_entitytype as string,",
						"          createdonbehalfbyyominame as string,",
						"          gap_language as long,",
						"          importsequencenumber as long,",
						"          organizationidname as string,",
						"          utcconversiontimezonecode as long,",
						"          createdbyyominame as string,",
						"          gap_entityname as string,",
						"          modifiedbyname as string,",
						"          versionnumber as long,",
						"          modifiedbyyominame as string,",
						"          timezoneruleversionnumber as long,",
						"          gap_entityschemaname as string,",
						"          modifiedon as timestamp,",
						"          gap_powerbioptionsetrefid as string,",
						"          gap_optionsetschemaname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          createdbyname as string,",
						"          createdon as string,",
						"          gap_value as long,",
						"          createdonbehalfbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          gap_label as string,",
						"          overriddencreatedon as timestamp,",
						"          gap_imageurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'gap_powerbioptionsetref') ~> GapOptionsetIn",
						"OriginationOppSourceSL select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OriginationSelectOutput",
						"AccountInSourceSL select(mapColumn(",
						"          Id,",
						"          ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountSelectOutput",
						"AppointmentInSourceSL select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AppointmentSelectOutput",
						"ContactsInSourceSL select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ContactSelectOutput",
						"SystemUserInSourceSL select(mapColumn(",
						"          id = Id,",
						"          calendarid,",
						"          siteid,",
						"          azureactivedirectoryobjectid,",
						"          modifiedby,",
						"          address1_line1,",
						"          internalemailaddress,",
						"          siteidname,",
						"          yomifullname,",
						"          mobilephone,",
						"          lastname,",
						"          address1_city,",
						"          title,",
						"          address1_composite,",
						"          firstname,",
						"          address1_addressid,",
						"          userpuid,",
						"          parentsystemuserid,",
						"          entityimageid,",
						"          address1_country,",
						"          businessunitidname,",
						"          address1_telephone1,",
						"          organizationid,",
						"          defaultmailboxname,",
						"          identityid,",
						"          address2_addressid,",
						"          createdon,",
						"          domainname,",
						"          modifiedbyyominame,",
						"          address1_postalcode,",
						"          ts_inititals,",
						"          windowsliveid,",
						"          queueidname,",
						"          modifiedbyname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SystemUserSelectInSL",
						"OptionSetInSL pivot(groupBy(Option,",
						"          LocalizedLabel,",
						"          EntityName),",
						"     pivotBy(EntityName),",
						"     Entity = max(EntityName),",
						"          Label = max(LocalizedLabel),",
						"     columnNaming: '$V$N',",
						"     lateral: true) ~> OptionSetPivotSL",
						"GapOptionsetIn select(mapColumn(",
						"          gap_entityschemanameTBL = gap_entityschemaname,",
						"          gap_optionsetschemanameCOL = gap_optionsetschemaname,",
						"          gap_value,",
						"          gap_label",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> GapOptionSetOutputSL",
						"derivedColumn1, GapOptionSetOutputSL join(EntityName == gap_entityschemanameTBL,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"OriginationSelectOutput derive(EntityName = 'ts_originationopportunity') ~> derivedColumn1",
						"GapOptionSetOutputSL unpivot(output(",
						"          NewColgap_entitycol as string,",
						"          gap_entityschemanameTBL as string",
						"     ),",
						"     ungroupBy(gap_value,",
						"          gap_label,",
						"          gap_optionsetschemanameCOL),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> unpivot1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EntityName as string,",
						"          OptionSetName as string,",
						"          Option as integer,",
						"          IsUserLocalizedLabel as string,",
						"          LocalizedLabelLanguageCode as integer,",
						"          LocalizedLabel as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationSL",
						"OptionSetPivotSL sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'OptionViewOutput',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OpionsetSLSink",
						"unpivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'GapOptionsetSL',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> GapOptionSetSinkSL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsSLLinkedSVC')]",
				"[concat(variables('factoryId'), '/datasets/ReportsSL')]",
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseToAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Writes Dataverse data in Azure Data Lake Storage Gen2 to Azure SQL Database.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "SQL"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tContainerName as string (\"Dataverse Container Name\"),\n\tTableName as string (\"Dataverse Table Name\")\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'dataverse_montagu_org5a2bcccf',\n\ttableName: 'ts_originationopportunity',\n\tmanifestType: 'model') ~> ADLS\nADLS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmanifestType: 'manifest',\n\tpreCommands: [],\n\tpostCommands: []) ~> SQL\nADLS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nADLS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReportsDataset1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseToAzureSQL1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Writes Dataverse data in Azure Data Lake Storage Gen2 to Azure SQL Database.",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ADLSLinkedService",
								"type": "LinkedServiceReference"
							},
							"name": "ADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "SQL"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tContainerName as string (\"Dataverse Container Name\"),\n\tTableName as string (\"Dataverse Table Name\")\n}\nsource(output(\n\t\tId as string,\n\t\tSinkCreatedOn as timestamp,\n\t\tSinkModifiedOn as timestamp,\n\t\tstatecode as long,\n\t\tstatuscode as long,\n\t\tindustrycode as long,\n\t\tcustomersizecode as long,\n\t\taccountratingcode as long,\n\t\taddress1_shippingmethodcode as long,\n\t\tbusinesstypecode as long,\n\t\tshippingmethodcode as long,\n\t\tpreferredappointmenttimecode as long,\n\t\taddress2_shippingmethodcode as long,\n\t\tterritorycode as long,\n\t\taccountclassificationcode as long,\n\t\tpreferredcontactmethodcode as long,\n\t\tpreferredappointmentdaycode as long,\n\t\tpaymenttermscode as long,\n\t\taddress1_addresstypecode as long,\n\t\townershipcode as long,\n\t\taddress2_freighttermscode as long,\n\t\taddress2_addresstypecode as long,\n\t\taddress1_freighttermscode as long,\n\t\tcustomertypecode as long,\n\t\taccountcategorycode as long,\n\t\tmarketingonly as boolean,\n\t\tdonotpostalmail as boolean,\n\t\tdonotbulkpostalmail as boolean,\n\t\tdonotbulkemail as boolean,\n\t\tdonotphone as boolean,\n\t\tdonotsendmm as boolean,\n\t\tisprivate as boolean,\n\t\tmerged as boolean,\n\t\tdonotfax as boolean,\n\t\tdonotemail as boolean,\n\t\tcreditonhold as boolean,\n\t\tfollowemail as boolean,\n\t\tparticipatesinworkflow as boolean,\n\t\tmodifiedby as string,\n\t\tmodifiedby_entitytype as string,\n\t\tdefaultpricelevelid as string,\n\t\tdefaultpricelevelid_entitytype as string,\n\t\tmodifiedbyexternalparty as string,\n\t\tmodifiedbyexternalparty_entitytype as string,\n\t\tprimarycontactid as string,\n\t\tprimarycontactid_entitytype as string,\n\t\tpreferredserviceid as string,\n\t\tpreferredserviceid_entitytype as string,\n\t\tpreferredequipmentid as string,\n\t\tpreferredequipmentid_entitytype as string,\n\t\towninguser as string,\n\t\towninguser_entitytype as string,\n\t\ttransactioncurrencyid as string,\n\t\ttransactioncurrencyid_entitytype as string,\n\t\tslainvokedid as string,\n\t\tslainvokedid_entitytype as string,\n\t\tcreatedbyexternalparty as string,\n\t\tcreatedbyexternalparty_entitytype as string,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfby_entitytype as string,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfby_entitytype as string,\n\t\tparentaccountid as string,\n\t\tparentaccountid_entitytype as string,\n\t\tslaid as string,\n\t\tslaid_entitytype as string,\n\t\tterritoryid as string,\n\t\tterritoryid_entitytype as string,\n\t\tmasterid as string,\n\t\tmasterid_entitytype as string,\n\t\towningbusinessunit as string,\n\t\towningbusinessunit_entitytype as string,\n\t\toriginatingleadid as string,\n\t\toriginatingleadid_entitytype as string,\n\t\towningteam as string,\n\t\towningteam_entitytype as string,\n\t\tpreferredsystemuserid as string,\n\t\tpreferredsystemuserid_entitytype as string,\n\t\tcreatedby as string,\n\t\tcreatedby_entitytype as string,\n\t\townerid as string,\n\t\townerid_entitytype as string,\n\t\taging90 as decimal(18,2),\n\t\tcreditlimit_base as decimal(18,2),\n\t\taging60_base as decimal(18,2),\n\t\tmarketcap as decimal(18,2),\n\t\topenrevenue as decimal(18,2),\n\t\trevenue as decimal(18,2),\n\t\taging30_base as decimal(18,2),\n\t\tmarketcap_base as decimal(18,2),\n\t\trevenue_base as decimal(18,2),\n\t\taging60 as decimal(18,2),\n\t\taging90_base as decimal(18,2),\n\t\taging30 as decimal(18,2),\n\t\topenrevenue_base as decimal(18,2),\n\t\tcreditlimit as decimal(18,2),\n\t\taddress2_postalcode as string,\n\t\taddress1_longitude as decimal(18,2),\n\t\taddress2_county as string,\n\t\tdefaultpricelevelidname as string,\n\t\tslainvokedidname as string,\n\t\tmasteraccountidname as string,\n\t\toverriddencreatedon as timestamp,\n\t\tentityimageid as string,\n\t\taddress2_longitude as decimal(18,2),\n\t\taddress2_line3 as string,\n\t\toriginatingleadidyominame as string,\n\t\taddress1_telephone2 as string,\n\t\ttransactioncurrencyidname as string,\n\t\taddress1_upszone as string,\n\t\tprocessid as string,\n\t\topenrevenue_date as timestamp,\n\t\taddress2_city as string,\n\t\tmasteraccountidyominame as string,\n\t\temailaddress2 as string,\n\t\temailaddress1 as string,\n\t\towneridyominame as string,\n\t\taddress1_country as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\tmodifiedbyname as string,\n\t\texchangerate as decimal(18,2),\n\t\taddress1_line2 as string,\n\t\taddress1_postofficebox as string,\n\t\tcreatedbyexternalpartyyominame as string,\n\t\topenrevenue_state as long,\n\t\tnumberofemployees as long,\n\t\tmodifiedbyexternalpartyyominame as string,\n\t\taddress1_utcoffset as long,\n\t\taddress2_stateorprovince as string,\n\t\tterritoryidname as string,\n\t\ttelephone1 as string,\n\t\taddress1_stateorprovince as string,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\taccountid as string,\n\t\taddress2_utcoffset as long,\n\t\toriginatingleadidname as string,\n\t\tmodifiedbyyominame as string,\n\t\tparentaccountidyominame as string,\n\t\tpreferredserviceidname as string,\n\t\taddress1_county as string,\n\t\taddress1_telephone3 as string,\n\t\tentityimage_url as string,\n\t\tprimarytwitterid as string,\n\t\taddress2_line2 as string,\n\t\tyominame as string,\n\t\tcreatedonbehalfbyname as string,\n\t\topendeals_state as long,\n\t\taddress1_city as string,\n\t\tfax as string,\n\t\ttimezoneruleversionnumber as long,\n\t\tcreatedonbehalfbyyominame as string,\n\t\taddress2_composite as string,\n\t\towneridtype as string,\n\t\taddress1_name as string,\n\t\taddress2_upszone as string,\n\t\tparentaccountidname as string,\n\t\ttelephone3 as string,\n\t\tentityimage_timestamp as long,\n\t\tmodifiedbyexternalpartyname as string,\n\t\temailaddress3 as string,\n\t\taddress1_latitude as decimal(18,2),\n\t\tteamsfollowed as long,\n\t\tprimarysatoriid as string,\n\t\taddress2_country as string,\n\t\ttelephone2 as string,\n\t\tcreatedbyexternalpartyname as string,\n\t\tlastusedincampaign as timestamp,\n\t\taccountnumber as string,\n\t\taddress1_line3 as string,\n\t\tprimarycontactidname as string,\n\t\ttimespentbymeonemailandmeetings as string,\n\t\taddress1_primarycontactname as string,\n\t\tpreferredsystemuseridname as string,\n\t\taddress2_postofficebox as string,\n\t\tpreferredequipmentidname as string,\n\t\tprimarycontactidyominame as string,\n\t\tversionnumber as long,\n\t\topendeals as long,\n\t\tslaname as string,\n\t\taddress1_composite as string,\n\t\tftpsiteurl as string,\n\t\tsic as string,\n\t\taddress2_line1 as string,\n\t\tlastonholdtime as timestamp,\n\t\taddress1_telephone1 as string,\n\t\taddress2_fax as string,\n\t\tdescription as string,\n\t\tstageid as string,\n\t\twebsiteurl as string,\n\t\tutcconversiontimezonecode as long,\n\t\tstockexchange as string,\n\t\taddress1_addressid as string,\n\t\taddress2_latitude as decimal(18,2),\n\t\ttraversedpath as string,\n\t\taddress2_addressid as string,\n\t\tonholdtime as long,\n\t\taddress1_line1 as string,\n\t\tcreatedbyyominame as string,\n\t\towneridname as string,\n\t\taddress2_telephone1 as string,\n\t\taddress2_telephone2 as string,\n\t\taddress2_telephone3 as string,\n\t\taddress2_name as string,\n\t\tcreatedbyname as string,\n\t\ttickersymbol as string,\n\t\taddress2_primarycontactname as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\topendeals_date as timestamp,\n\t\taddress1_fax as string,\n\t\timportsequencenumber as long,\n\t\tname as string,\n\t\tcr79c_addcolumn as string,\n\t\tpreferredsystemuseridyominame as string,\n\t\tsharesoutstanding as long,\n\t\taddress1_postalcode as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tentity: ($TableName),\n\tformat: 'cdm',\n\tmanifestType: 'model',\n\tfolderPath: '',\n\tfileSystem: ($ContainerName),\n\tdateFormats: ['MM/dd/yyyy'],\n\ttimestampFormats: ['MM/dd/yyyy hh:mm:ss a'],\n\tpreferredIntegralType: 'long',\n\tpreferredFractionalType: 'float') ~> ADLS\nADLS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataverseToParquet')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "ADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet",
								"type": "DatasetReference"
							},
							"name": "DataverseParquet"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tContainerName as string (\"Dataverse Container Name\"),\n\tTableName as string (\"Dataverse Table Name\")\n}\nsource(output(\n\t\tId as string,\n\t\tSinkCreatedOn as timestamp,\n\t\tSinkModifiedOn as timestamp,\n\t\tstatecode as long,\n\t\tstatuscode as long,\n\t\tpreferredcontactmethodcode as long,\n\t\taccountratingcode as long,\n\t\taddress1_shippingmethodcode as long,\n\t\tbusinesstypecode as long,\n\t\tindustrycode as long,\n\t\tshippingmethodcode as long,\n\t\tpreferredappointmenttimecode as long,\n\t\taddress2_shippingmethodcode as long,\n\t\tterritorycode as long,\n\t\tpreferredappointmentdaycode as long,\n\t\tpaymenttermscode as long,\n\t\taccountclassificationcode as long,\n\t\taddress1_addresstypecode as long,\n\t\townershipcode as long,\n\t\taddress2_freighttermscode as long,\n\t\taddress2_addresstypecode as long,\n\t\taddress1_freighttermscode as long,\n\t\tcustomersizecode as long,\n\t\tcustomertypecode as long,\n\t\taccountcategorycode as long,\n\t\tdonotpostalmail as boolean,\n\t\tmarketingonly as boolean,\n\t\tdonotbulkemail as boolean,\n\t\tdonotbulkpostalmail as boolean,\n\t\tdonotphone as boolean,\n\t\tdonotsendmm as boolean,\n\t\tisprivate as boolean,\n\t\tparticipatesinworkflow as boolean,\n\t\tmerged as boolean,\n\t\tcreditonhold as boolean,\n\t\tdonotfax as boolean,\n\t\tdonotemail as boolean,\n\t\tfollowemail as boolean,\n\t\tmodifiedby as string,\n\t\tmodifiedby_entitytype as string,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfby_entitytype as string,\n\t\towningbusinessunit as string,\n\t\towningbusinessunit_entitytype as string,\n\t\tcreatedby as string,\n\t\tcreatedby_entitytype as string,\n\t\ttransactioncurrencyid as string,\n\t\ttransactioncurrencyid_entitytype as string,\n\t\tmodifiedbyexternalparty as string,\n\t\tmodifiedbyexternalparty_entitytype as string,\n\t\towninguser as string,\n\t\towninguser_entitytype as string,\n\t\towningteam as string,\n\t\towningteam_entitytype as string,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfby_entitytype as string,\n\t\tslainvokedid as string,\n\t\tslainvokedid_entitytype as string,\n\t\tmasterid as string,\n\t\tmasterid_entitytype as string,\n\t\tparentaccountid as string,\n\t\tparentaccountid_entitytype as string,\n\t\tpreferredsystemuserid as string,\n\t\tpreferredsystemuserid_entitytype as string,\n\t\tprimarycontactid as string,\n\t\tprimarycontactid_entitytype as string,\n\t\tslaid as string,\n\t\tslaid_entitytype as string,\n\t\tcreatedbyexternalparty as string,\n\t\tcreatedbyexternalparty_entitytype as string,\n\t\townerid as string,\n\t\townerid_entitytype as string,\n\t\taging90 as decimal(18,2),\n\t\tcreditlimit_base as decimal(18,2),\n\t\taging60_base as decimal(18,2),\n\t\tmarketcap as decimal(18,2),\n\t\trevenue_base as decimal(18,2),\n\t\taging60 as decimal(18,2),\n\t\tmarketcap_base as decimal(18,2),\n\t\trevenue as decimal(18,2),\n\t\taging90_base as decimal(18,2),\n\t\taging30_base as decimal(18,2),\n\t\tcreditlimit as decimal(18,2),\n\t\taging30 as decimal(18,2),\n\t\taddress2_postalcode as string,\n\t\taddress1_longitude as decimal(18,2),\n\t\taddress2_county as string,\n\t\tmasteraccountidname as string,\n\t\taddress1_county as string,\n\t\taddress2_line3 as string,\n\t\taddress2_longitude as decimal(18,2),\n\t\taddress1_telephone2 as string,\n\t\ttransactioncurrencyidname as string,\n\t\taddress1_upszone as string,\n\t\tprocessid as string,\n\t\taddress2_name as string,\n\t\taddress1_stateorprovince as string,\n\t\tmasteraccountidyominame as string,\n\t\temailaddress1 as string,\n\t\towneridyominame as string,\n\t\taddress1_country as string,\n\t\taddress2_upszone as string,\n\t\texchangerate as decimal(18,2),\n\t\taddress1_line2 as string,\n\t\tcreatedbyexternalpartyyominame as string,\n\t\taddress1_city as string,\n\t\taddress1_utcoffset as long,\n\t\taddress2_stateorprovince as string,\n\t\tversionnumber as long,\n\t\tentityimageid as string,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\taccountid as string,\n\t\taddress2_utcoffset as long,\n\t\tmodifiedbyyominame as string,\n\t\toverriddencreatedon as timestamp,\n\t\tmodifiedbyname as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\tentityimage_url as string,\n\t\tprimarytwitterid as string,\n\t\taddress2_line2 as string,\n\t\tyominame as string,\n\t\taddress1_latitude as decimal(18,2),\n\t\tprimarysatoriid as string,\n\t\tfax as string,\n\t\ttimezoneruleversionnumber as long,\n\t\tcreatedonbehalfbyyominame as string,\n\t\taddress2_composite as string,\n\t\towneridtype as string,\n\t\taddress1_name as string,\n\t\tparentaccountidname as string,\n\t\ttelephone3 as string,\n\t\tparentaccountidyominame as string,\n\t\tentityimage_timestamp as long,\n\t\tmodifiedbyexternalpartyname as string,\n\t\temailaddress3 as string,\n\t\temailaddress2 as string,\n\t\taddress2_country as string,\n\t\ttelephone2 as string,\n\t\tcreatedbyexternalpartyname as string,\n\t\tlastusedincampaign as timestamp,\n\t\taccountnumber as string,\n\t\ttraversedpath as string,\n\t\tprimarycontactidname as string,\n\t\ttimespentbymeonemailandmeetings as string,\n\t\taddress1_primarycontactname as string,\n\t\tpreferredsystemuseridname as string,\n\t\tcreatedonbehalfbyname as string,\n\t\taddress2_postofficebox as string,\n\t\taddress2_latitude as decimal(18,2),\n\t\tmodifiedbyexternalpartyyominame as string,\n\t\tprimarycontactidyominame as string,\n\t\tslaname as string,\n\t\taddress1_composite as string,\n\t\tftpsiteurl as string,\n\t\tsic as string,\n\t\taddress2_line1 as string,\n\t\tlastonholdtime as timestamp,\n\t\taddress1_telephone1 as string,\n\t\taddress2_fax as string,\n\t\taddress1_telephone3 as string,\n\t\tdescription as string,\n\t\tstageid as string,\n\t\ttelephone1 as string,\n\t\twebsiteurl as string,\n\t\tutcconversiontimezonecode as long,\n\t\tstockexchange as string,\n\t\taddress1_addressid as string,\n\t\taddress2_city as string,\n\t\taddress2_primarycontactname as string,\n\t\taddress2_addressid as string,\n\t\tonholdtime as long,\n\t\taddress1_line1 as string,\n\t\taddress1_line3 as string,\n\t\tcreatedbyyominame as string,\n\t\taddress2_telephone1 as string,\n\t\taddress2_telephone2 as string,\n\t\taddress2_telephone3 as string,\n\t\taddress1_postofficebox as string,\n\t\tcreatedbyname as string,\n\t\ttickersymbol as string,\n\t\tnumberofemployees as long,\n\t\towneridname as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\taddress1_fax as string,\n\t\timportsequencenumber as long,\n\t\tname as string,\n\t\tslainvokedidname as string,\n\t\tpreferredsystemuseridyominame as string,\n\t\tsharesoutstanding as long,\n\t\taddress1_postalcode as string,\n\t\towningbusinessunitname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tentity: ($TableName),\n\tformat: 'cdm',\n\tmanifestType: 'model',\n\tfolderPath: '',\n\tfileSystem: ($ContainerName)) ~> ADLS\nADLS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataverseParquet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]",
				"[concat(variables('factoryId'), '/datasets/Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DueDil')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "APIPULL1",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "InsightsAzureSynapseAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"scriptLines": [
						"source(useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'json',",
						"     fileSystem: 'insights',",
						"     folderPath: 'duedil',",
						"     fileName: 'response_1652290300695.json',",
						"     documentForm: 'singleDocument') ~> source1",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['supportRFC5988' -> 'true'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> source2",
						"source1 derive(charitableIdentitiesCount = toString(byName('charitableIdentitiesCount')),",
						"          companyId = toString(byName('companyId')),",
						"          countryCode = toString(byName('countryCode')),",
						"          incorporationCountry = toString(byName('incorporationCountry')),",
						"          incorporationDate = toString(byName('incorporationDate')),",
						"          legalEntityIdentifier = toString(byName('legalEntityIdentifier')),",
						"          name = toString(byName('name')),",
						"          numberOfEmployees = toString(byName('numberOfEmployees')),",
						"          officialStatus = toString(byName('officialStatus')),",
						"          primaryWebsite = toString(byName('primaryWebsite')),",
						"          simplifiedStatus = toString(byName('simplifiedStatus')),",
						"          type = toString(byName('type'))) ~> MapDrifted1",
						"source2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'DueDillAPI',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
						"MapDrifted1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]",
				"[concat(variables('factoryId'), '/datasets/APIPULL1')]",
				"[concat(variables('factoryId'), '/linkedServices/InsightsAzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"name": "Systemusersource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "AccountStage"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "MeetingStageClean"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "ContactsStageClean"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "OriginationSINK"
						},
						{
							"dataset": {
								"referenceName": "Systemusertable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "MeetingsCleanselect"
						},
						{
							"name": "contactscleanselect"
						},
						{
							"name": "OrigiopportCleanout"
						},
						{
							"name": "AccountsSelectClean"
						},
						{
							"name": "Systemuserselect"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> Systemusersource",
						"MeetingsAppointmentsIn select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MeetingsCleanselect",
						"ContactsIn select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> contactscleanselect",
						"OriginationOpportunityIn select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrigiopportCleanout",
						"AccountIn select(mapColumn(",
						"          Id,",
						"          ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountsSelectClean",
						"Systemusersource select(skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Systemuserselect",
						"AccountsSelectClean sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountStage",
						"MeetingsCleanselect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageClean",
						"contactscleanselect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageClean",
						"OrigiopportCleanout sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationSINK",
						"Systemuserselect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReportsDataset1')]",
				"[concat(variables('factoryId'), '/datasets/Systemusertable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDataflow_CDM')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "AccountIn"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "OriginationOpportunityIn"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "MeetingsAppointmentsIn"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "ContactsIn"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "AccountStage"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "MeetingStageClean"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "ContactsStageClean"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "OriginationSINK"
						},
						{
							"dataset": {
								"referenceName": "ReportsDataset1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'account',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> AccountIn",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'ts_originationopportunity',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> OriginationOpportunityIn",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'appointment',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> MeetingsAppointmentsIn",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'contact',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> ContactsIn",
						"AccountIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountStage",
						"MeetingsAppointmentsIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageClean",
						"ContactsIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageClean",
						"OriginationOpportunityIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationSINK",
						"AccountIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]",
				"[concat(variables('factoryId'), '/datasets/ReportsDataset1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDataflow_Split Table')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"name": "SystemuserSource"
						},
						{
							"name": "OptionsetSource"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedAccount"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedOriginationOpportunities"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedMeetingAppointments"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedContacts"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedSystemuser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AccountTable",
								"type": "DatasetReference"
							},
							"name": "AccountStage"
						},
						{
							"dataset": {
								"referenceName": "Appointment",
								"type": "DatasetReference"
							},
							"name": "MeetingStageClean"
						},
						{
							"dataset": {
								"referenceName": "Contacttable",
								"type": "DatasetReference"
							},
							"name": "ContactsStageClean"
						},
						{
							"dataset": {
								"referenceName": "OriginationOpp",
								"type": "DatasetReference"
							},
							"name": "OriginationSINK"
						},
						{
							"dataset": {
								"referenceName": "Systemusertable",
								"type": "DatasetReference"
							},
							"name": "SystemUserClean"
						},
						{
							"dataset": {
								"referenceName": "Optionsettable",
								"type": "DatasetReference"
							},
							"name": "sinkoptionset"
						},
						{
							"name": "SinkEnrichedOrigination"
						},
						{
							"name": "SinkAccount"
						},
						{
							"name": "SinkMeeting"
						},
						{
							"name": "SinkContacts"
						},
						{
							"name": "SinkSystemUser"
						}
					],
					"transformations": [
						{
							"name": "MeetingsCleanselect"
						},
						{
							"name": "contactscleanselect"
						},
						{
							"name": "OrigiopportCleanout"
						},
						{
							"name": "AccountsSelectClean"
						},
						{
							"name": "SystemUserSelect"
						},
						{
							"name": "Originationjoinoutput"
						},
						{
							"name": "GapOptionsetSelect"
						},
						{
							"name": "EnrichedAccountSelect"
						},
						{
							"name": "OutputEnrichedOrigination"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "select4"
						},
						{
							"name": "AppointmentsJoinOutput"
						},
						{
							"name": "ContactsJoin"
						},
						{
							"name": "SystemUserJoin"
						},
						{
							"name": "AccountEnrichedJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> SystemuserSource",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          organizationid as string,",
						"          organizationid_entitytype as string,",
						"          createdonbehalfbyyominame as string,",
						"          gap_language as long,",
						"          importsequencenumber as long,",
						"          organizationidname as string,",
						"          utcconversiontimezonecode as long,",
						"          createdbyyominame as string,",
						"          gap_entityname as string,",
						"          modifiedbyname as string,",
						"          versionnumber as long,",
						"          modifiedbyyominame as string,",
						"          timezoneruleversionnumber as long,",
						"          gap_entityschemaname as string,",
						"          modifiedon as timestamp,",
						"          gap_powerbioptionsetrefid as string,",
						"          gap_optionsetschemaname as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          createdbyname as string,",
						"          createdon as string,",
						"          gap_value as long,",
						"          createdonbehalfbyname as string,",
						"          modifiedonbehalfbyname as string,",
						"          gap_label as string,",
						"          overriddencreatedon as timestamp,",
						"          gap_imageurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'gap_powerbioptionsetref') ~> OptionsetSource",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_primarysecondaryfocus as string,",
						"          customertypeAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          accountclassificationAZlabel as string,",
						"          ts_easeofworking as string,",
						"          ts_ukrow as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          ts_address1addresstype as string,",
						"          xpd_relationshipstatus as string,",
						"          ts_relationship as string,",
						"          xpd_remindermonths as string,",
						"          ts_importance as string,",
						"          address2_freighttermsAZlabel as string,",
						"          ts_irrvsmomperformancemeasure as string,",
						"          ts_introducertype as string,",
						"          accountcategoryAZlabel as string,",
						"          paymenttermsAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          businesstypeAZlabel as string,",
						"          industryAZlabel as string,",
						"          ts_sizeoffirm as string,",
						"          ts_interaction as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          ts_portfoliocompanystatus as string,",
						"          customersizeAZlabel as string,",
						"          xpd_previousinvestorstatus as string,",
						"          ts_recommendationoffirm as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          accountratingAZlabel as string,",
						"          ts_investorstatus as string,",
						"          ts_capabilitiesoffirm as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_nextoriginationmeetingarranged as string,",
						"          ownershipAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_investortype as string,",
						"          shippingmethodAZlabel as string,",
						"          ts_investorregion as string,",
						"          address1_freighttermsAZlabel as string,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as string,",
						"          donotbulkpostalmail as string,",
						"          donotpostalmail as string,",
						"          msdyn_gdproptout as string,",
						"          ts_organisationalchange as string,",
						"          xpd_publictoprivatetracker as string,",
						"          ts_auditor as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          creditonhold as string,",
						"          marketingonly as string,",
						"          participatesinworkflow as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          xpd_setreminder as string,",
						"          ts_personnelchange as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          xpd_rpo as string,",
						"          ts_trackcompany as string,",
						"          donotemail as string,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'account',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> EnrichedAccount",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_dealannouncedreason as string,",
						"          ts_highprioritynew as string,",
						"          ts_actionstatus as string,",
						"          mpe_targetrelationshipstatus as string,",
						"          mpe_carveout as string,",
						"          ts_producttype as string,",
						"          ts_internalintermediarysource as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_currentactivity as string,",
						"          ts_opportunitystatus as string,",
						"          ts_montaguprimaryoffice as string,",
						"          ts_opportunitytype as string,",
						"          ts_posthumstatus as string,",
						"          ts_meetingremindermonths as string,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as string,",
						"          ts_stagereachedfir as string,",
						"          ts_stagereachedipr as string,",
						"          ts_duplicateopportunityfordiscussion as string,",
						"          mpe_smalltarget as string,",
						"          ts_stagereachedcr as string,",
						"          xpd_includeonallpapers as string,",
						"          ts_sold as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'ts_originationopportunity',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> EnrichedOriginationOpportunities",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_stageofmeetingrounds as string,",
						"          ts_talentmeetingtype as string,",
						"          instancetypeAZlabel as string,",
						"          ts_whooriginatedthemeeting as string,",
						"          onlinemeetingtype as string,",
						"          ts_meetingteam as string,",
						"          ts_othermeetingmethod as string,",
						"          ts_tone as string,",
						"          ts_meetingmethod as string,",
						"          ts_originationmeetingtype as string,",
						"          priorityAZlabel as string,",
						"          attachmenterrors as string,",
						"          ts_eventtype as string,",
						"          ts_talentmeetingmethod as string,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as string,",
						"          isworkflowcreated as string,",
						"          isalldayevent as string,",
						"          ts_interview as string,",
						"          isbilled as string,",
						"          isdraft as string,",
						"          ts_keyiractivity as string,",
						"          ts_noninvestor as string,",
						"          ismapiprivate as string,",
						"          isregularactivity as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointment',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> EnrichedMeetingAppointments",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          haschildrenAZlabel as string,",
						"          customertypeAZlabel as string,",
						"          ts_recommendationofindividual as string,",
						"          genderAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          leadsourceAZlabel as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          address2_freighttermsAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_debtsubtype as string,",
						"          msdyn_orgchangestatus as string,",
						"          ts_suffix as string,",
						"          xpd_gender as string,",
						"          ts_title as string,",
						"          paymenttermsAZlabel as string,",
						"          accountroleAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_vendortargettrackingrole as string,",
						"          address3_freighttermsAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          customersizeAZlabel as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          ts_futurecontactmethod as string,",
						"          address3_shippingmethodAZlabel as string,",
						"          address2_addresstypeAZlabel as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_capabilitiesofindividual as string,",
						"          address3_addresstypeAZlabel as string,",
						"          familystatusAZlabel as string,",
						"          shippingmethodAZlabel as string,",
						"          xpd_availability as string,",
						"          educationAZlabel as string,",
						"          address1_freighttermsAZlabel as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as string,",
						"          isbackofficecustomer as string,",
						"          donotpostalmail as string,",
						"          xpd_addcontacttooutlook as string,",
						"          ts_centralrelationshipmanager as string,",
						"          msdyn_gdproptout as string,",
						"          xpd_hascompany as string,",
						"          creditonhold as string,",
						"          xpd_benchcandidate as string,",
						"          donotbulkpostalmail as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          xpd_sharepointdocumentlocationcreated as string,",
						"          xpd_available as string,",
						"          ts_leadearlystageinteraction as string,",
						"          participatesinworkflow as string,",
						"          ts_doyouwishtotrackthiscontact as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          marketingonly as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          isautocreate as string,",
						"          donotemail as string,",
						"          ts_unconfirmedemailaddress as string,",
						"          mpe_companysearchbyemail as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          msdyn_segmentidname as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contact',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> EnrichedContacts",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypeAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          azurestate as string,",
						"          invitestatusAZlabel as string,",
						"          preferredaddressAZlabel as string,",
						"          preferredemailAZlabel as string,",
						"          outgoingemaildeliverymethod as string,",
						"          preferredphoneAZlabel as string,",
						"          emailrouteraccessapproval as string,",
						"          deletedstate as string,",
						"          incomingemaildeliverymethod as string,",
						"          accessmode as string,",
						"          caltype as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          setupuser as string,",
						"          islicensed as string,",
						"          defaultfilterspopulated as string,",
						"          isactivedirectoryuser as string,",
						"          displayinserviceviews as string,",
						"          msdyn_gdproptout as string,",
						"          isdisabled as string,",
						"          isintegrationuser as string,",
						"          isemailaddressapprovedbyo365admin as string,",
						"          issyncwithdirectory as string,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'systemuser',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> EnrichedSystemuser",
						"MeetingsAppointmentsIn select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MeetingsCleanselect",
						"ContactsIn select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> contactscleanselect",
						"OriginationOpportunityIn select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrigiopportCleanout",
						"AccountIn select(mapColumn(",
						"          Id,",
						"          ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountsSelectClean",
						"SystemuserSource select(mapColumn(",
						"          id = Id,",
						"          calendarid,",
						"          siteid,",
						"          azureactivedirectoryobjectid,",
						"          modifiedby,",
						"          address1_line1,",
						"          internalemailaddress,",
						"          siteidname,",
						"          yomifullname,",
						"          mobilephone,",
						"          lastname,",
						"          address1_city,",
						"          title,",
						"          address1_composite,",
						"          firstname,",
						"          address1_addressid,",
						"          userpuid,",
						"          parentsystemuserid,",
						"          entityimageid,",
						"          address1_country,",
						"          businessunitidname,",
						"          address1_telephone1,",
						"          organizationid,",
						"          defaultmailboxname,",
						"          identityid,",
						"          address2_addressid,",
						"          createdon,",
						"          domainname,",
						"          modifiedbyyominame,",
						"          address1_postalcode,",
						"          ts_inititals,",
						"          windowsliveid,",
						"          queueidname,",
						"          modifiedbyname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SystemUserSelect",
						"OrigiopportCleanout, OutputEnrichedOrigination join(OrigiopportCleanout@Id == OutputEnrichedOrigination@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'right')~> Originationjoinoutput",
						"OptionsetSource select(mapColumn(",
						"          Id,",
						"          organizationid,",
						"          gap_entityname,",
						"          gap_entityschemaname,",
						"          gap_powerbioptionsetrefid,",
						"          gap_optionsetschemaname,",
						"          gap_value,",
						"          gap_label",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> GapOptionsetSelect",
						"EnrichedAccount select(mapColumn(",
						"          Id,",
						"          state = stateAZlabel,",
						"          status = statusAZlabel,",
						"          customertype = customertypeAZlabel,",
						"          address1_addresstype = address1_addresstypeAZlabel,",
						"          accountclassification = accountclassificationAZlabel,",
						"          preferredappointmenttime = preferredappointmenttimeAZlabel,",
						"          address2_freightterms = address2_freighttermsAZlabel,",
						"          accountcategory = accountcategoryAZlabel,",
						"          paymentterms = paymenttermsAZlabel,",
						"          preferredappointmentday = preferredappointmentdayAZlabel,",
						"          businesstype = businesstypeAZlabel,",
						"          industry = industryAZlabel,",
						"          address1_shippingmethod = address1_shippingmethodAZlabel,",
						"          customersize = customersizeAZlabel,",
						"          preferredcontactmethod = preferredcontactmethodAZlabel,",
						"          accountratingAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address2_shippingmethodAZlabel,",
						"          ownershipAZlabel,",
						"          territoryAZlabel,",
						"          shippingmethodAZlabel,",
						"          address1_freighttermsAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> EnrichedAccountSelect",
						"EnrichedOriginationOpportunities select(mapColumn(",
						"          Id,",
						"          SinkCreatedOn,",
						"          SinkModifiedOn,",
						"          stateAZlabel,",
						"          statusAZlabel,",
						"          ts_dealannouncedreason,",
						"          ts_highprioritynew,",
						"          ts_actionstatus,",
						"          mpe_targetrelationshipstatus,",
						"          mpe_carveout,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          mpe_flowlastrunoutcome,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_meetingremindermonths,",
						"          ts_choppedreason,",
						"          ts_setreminder,",
						"          ts_stagereachedfir,",
						"          ts_stagereachedipr,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          ts_stagereachedcr,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_statuschangedby,",
						"          ts_statuschangedby_entitytype,",
						"          ts_buyer,",
						"          ts_buyer_entitytype,",
						"          owningbusinessunit,",
						"          owningbusinessunit_entitytype,",
						"          ts_reminderto,",
						"          ts_reminderto_entitytype,",
						"          mpe_productid,",
						"          mpe_productid_entitytype,",
						"          ts_targetbusiness,",
						"          ts_targetbusiness_entitytype,",
						"          ts_firstreferralcompany,",
						"          ts_firstreferralcompany_entitytype,",
						"          ts_deallead,",
						"          ts_deallead_entitytype,",
						"          ts_montaguowner,",
						"          ts_montaguowner_entitytype,",
						"          modifiedby,",
						"          modifiedby_entitytype,",
						"          modifiedonbehalfby,",
						"          modifiedonbehalfby_entitytype,",
						"          owninguser,",
						"          owninguser_entitytype,",
						"          ts_firstreferralcontact,",
						"          ts_firstreferralcontact_entitytype,",
						"          owningteam,",
						"          owningteam_entitytype,",
						"          createdonbehalfby,",
						"          createdonbehalfby_entitytype,",
						"          transactioncurrencyid,",
						"          transactioncurrencyid_entitytype,",
						"          createdby,",
						"          createdby_entitytype,",
						"          ts_managerwedback,",
						"          ts_managerwedback_entitytype,",
						"          ts_country,",
						"          ts_country_entitytype,",
						"          mpe_targetbusiness_parentid,",
						"          mpe_targetbusiness_parentid_entitytype,",
						"          ownerid,",
						"          ownerid_entitytype,",
						"          ts_sellmandate,",
						"          ts_sellmandate_entitytype,",
						"          ts_estebitda_base,",
						"          ts_estebit_base,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estturnover_base,",
						"          ts_estdealsize,",
						"          ts_estdealsize_base,",
						"          ts_estturnover,",
						"          ts_buyeryominame,",
						"          modifiedon,",
						"          ts_statuschangedbyname,",
						"          ts_managerwedbackyominame,",
						"          xpd_montaguprojectname,",
						"          transactioncurrencyidname,",
						"          ts_nextsteps,",
						"          ts_montaguowneryominame,",
						"          ts_firstreferralcontactname,",
						"          ts_opportunitydescription,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_targetbusinessyominame,",
						"          ts_montaguownername,",
						"          ts_managerwedbackname,",
						"          ts_opportunitystage,",
						"          ts_otherdocumentsurl,",
						"          exchangerate,",
						"          mpe_documentsetid,",
						"          ts_buyername,",
						"          ts_firstreferralcontactyominame,",
						"          createdon,",
						"          ts_sellmandateyominame,",
						"          mpe_montaguprimaryofficestring,",
						"          ts_statuschangedbyyominame,",
						"          ts_firstreferralcompanyname,",
						"          owneridyominame,",
						"          ts_choppedcomments,",
						"          timezoneruleversionnumber,",
						"          createdbyname,",
						"          ts_dealleadname,",
						"          owningbusinessunitname,",
						"          ts_dealleadyominame,",
						"          ts_lastdatestatuschanged,",
						"          traversedpath,",
						"          overriddencreatedon,",
						"          ts_iprdocumenturl,",
						"          createdonbehalfbyname,",
						"          ts_sellmandatename,",
						"          owneridtype,",
						"          owneridname,",
						"          modifiedonbehalfbyname,",
						"          createdonbehalfbyyominame,",
						"          mpe_productidname,",
						"          mpe_targetbusiness_parentidyominame,",
						"          ts_originationopportunityid,",
						"          ts_crdocumenturl,",
						"          ts_datedealannounced,",
						"          processid,",
						"          mpe_montaguprimaryofficeowner,",
						"          ts_reason,",
						"          ts_targetbusinessname,",
						"          ts_remindertoname,",
						"          ts_postcompletionnoteurl,",
						"          ts_name,",
						"          stageid,",
						"          ts_currentopportunitystatus,",
						"          ts_firstreferralcompanyyominame,",
						"          mpe_flowlastrundate,",
						"          ts_firdocumenturl,",
						"          modifiedbyyominame,",
						"          modifiedonbehalfbyyominame,",
						"          ts_movedoutofwipdate,",
						"          ts_equitychequesize,",
						"          utcconversiontimezonecode,",
						"          mpe_targetbusiness_parentidname,",
						"          ts_weofferedxltmebitda,",
						"          importsequencenumber,",
						"          ts_remindertoyominame,",
						"          ts_companyid,",
						"          ts_datereminderwasset,",
						"          versionnumber,",
						"          ts_originationid,",
						"          ts_countryname,",
						"          ts_choppeddate,",
						"          mpe_posthunstatustext,",
						"          modifiedbyname,",
						"          createdbyyominame,",
						"          ts_humdate,",
						"          ts_sellmandateidtype,",
						"          ts_dateofreminder,",
						"          ts_humurl",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedOrigination",
						"EnrichedMeetingAppointments select(mapColumn(",
						"          each(match(true()))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"EnrichedContacts select(mapColumn(",
						"          each(match(true()))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"EnrichedSystemuser select(mapColumn(",
						"          each(match(true()))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select4",
						"MeetingsCleanselect, EnrichedMeetingAppointments join(MeetingsCleanselect@Id == EnrichedMeetingAppointments@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> AppointmentsJoinOutput",
						"contactscleanselect, EnrichedContacts join(contactscleanselect@Id == EnrichedContacts@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContactsJoin",
						"SystemUserSelect, EnrichedSystemuser join(SystemUserSelect@id == EnrichedSystemuser@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SystemUserJoin",
						"AccountsSelectClean, EnrichedAccountSelect join(fuzzyCompare(AccountsSelectClean@Id, EnrichedAccountSelect@Id, 80.00),",
						"     joinType:'left',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: false,",
						"     scoreColumn:'AZlabel',",
						"     broadcast: 'off')~> AccountEnrichedJoin",
						"AccountEnrichedJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountStage",
						"AppointmentsJoinOutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageClean",
						"ContactsJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageClean",
						"Originationjoinoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationSINK",
						"SystemUserJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SystemUserClean",
						"GapOptionsetSelect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkoptionset",
						"OutputEnrichedOrigination sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkEnrichedOrigination",
						"EnrichedAccountSelect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkAccount",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkMeeting",
						"select3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkContacts",
						"select4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkSystemUser"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AccountTable')]",
				"[concat(variables('factoryId'), '/datasets/Appointment')]",
				"[concat(variables('factoryId'), '/datasets/Contacttable')]",
				"[concat(variables('factoryId'), '/datasets/OriginationOpp')]",
				"[concat(variables('factoryId'), '/datasets/Systemusertable')]",
				"[concat(variables('factoryId'), '/datasets/Optionsettable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join Choices')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ServerLessSQL2",
								"type": "LinkedServiceReference"
							},
							"name": "RawSource"
						},
						{
							"linkedService": {
								"referenceName": "ChoiceDB DataverseEnriched",
								"type": "LinkedServiceReference"
							},
							"name": "ChoiceAnswer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference"
							},
							"name": "FullEnriched"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'synapseanalytics',",
						"     query: 'SELECT \\n    *\\nFROM dataverse_montagu_org5a2bcccf',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> RawSource",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'synapseanalytics',",
						"     query: 'SELECT DISTINCT TABLE_NAME \\n    FROM INFORMATION_SCHEMA.COLUMNS\\n\\n     TABLE_SCHEMA= \\'DataverseEnriched\\';',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> ChoiceAnswer",
						"RawSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> FullEnriched"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ServerLessSQL2')]",
				"[concat(variables('factoryId'), '/linkedServices/ChoiceDB DataverseEnriched')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PH 1 FullEnrich No Cache')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedAccount"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedOriginationOpportunities"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedMeetingAppointments"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedContacts"
						},
						{
							"name": "SystemUserIn"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedSystemUser"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "AccountCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "MeetingStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "ContactsStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "OriginationCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "SystemUserSink"
						}
					],
					"transformations": [
						{
							"name": "Originationjoinoutput"
						},
						{
							"name": "AppointmentsJoinOutput"
						},
						{
							"name": "ContactsJoin"
						},
						{
							"name": "AccountEnrichedJoin"
						},
						{
							"name": "SystemUserJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_relationship as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          ts_introducertype as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          mpe_carveout as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          ts_primarysecondaryfocus as string,",
						"          customertypeAZOption as string,",
						"          address1_addresstypeAZOption as string,",
						"          accountclassificationAZOption as string,",
						"          ts_easeofworking as string,",
						"          ts_ukrow as string,",
						"          preferredappointmenttimeAZOption as string,",
						"          ts_address1addresstype as string,",
						"          xpd_relationshipstatus as string,",
						"          ts_relationship as string,",
						"          xpd_remindermonths as string,",
						"          ts_importance as string,",
						"          address2_freighttermsAZOption as string,",
						"          ts_irrvsmomperformancemeasure as string,",
						"          ts_introducertype as string,",
						"          accountcategoryAZOption as string,",
						"          paymenttermsAZOption as string,",
						"          preferredappointmentdayAZOption as string,",
						"          businesstypeAZOption as string,",
						"          industryAZOption as string,",
						"          ts_sizeoffirm as string,",
						"          ts_interaction as string,",
						"          address1_shippingmethodAZOption as string,",
						"          ts_portfoliocompanystatus as string,",
						"          customersizeAZOption as string,",
						"          xpd_previousinvestorstatus as string,",
						"          ts_recommendationoffirm as string,",
						"          preferredcontactmethodAZOption as string,",
						"          accountratingAZOption as string,",
						"          ts_investorstatus as string,",
						"          ts_capabilitiesoffirm as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          address2_addresstypeAZOption as string,",
						"          address2_shippingmethodAZOption as string,",
						"          ts_nextoriginationmeetingarranged as string,",
						"          ownershipAZOption as string,",
						"          territoryAZOption as string,",
						"          ts_investortype as string,",
						"          shippingmethodAZOption as string,",
						"          ts_investorregion as string,",
						"          address1_freighttermsAZOption as string,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as string,",
						"          donotbulkpostalmail as string,",
						"          donotpostalmail as string,",
						"          msdyn_gdproptout as string,",
						"          ts_organisationalchange as string,",
						"          xpd_publictoprivatetracker as string,",
						"          ts_auditor as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          creditonhold as string,",
						"          marketingonly as string,",
						"          participatesinworkflow as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          xpd_setreminder as string,",
						"          ts_personnelchange as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          xpd_rpo as string,",
						"          ts_trackcompany as string,",
						"          donotemail as string,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'account',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedAccount",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          ts_dealannouncedreason as string,",
						"          ts_highprioritynew as string,",
						"          ts_actionstatus as string,",
						"          mpe_targetrelationshipstatus as string,",
						"          mpe_carveout as string,",
						"          ts_producttype as string,",
						"          ts_internalintermediarysource as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_currentactivity as string,",
						"          ts_opportunitystatus as string,",
						"          ts_montaguprimaryoffice as string,",
						"          ts_opportunitytype as string,",
						"          ts_posthumstatus as string,",
						"          ts_meetingremindermonths as string,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as string,",
						"          ts_stagereachedfir as string,",
						"          ts_stagereachedipr as string,",
						"          ts_duplicateopportunityfordiscussion as string,",
						"          mpe_smalltarget as string,",
						"          ts_stagereachedcr as string,",
						"          xpd_includeonallpapers as string,",
						"          ts_sold as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'ts_originationopportunity',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedOriginationOpportunities",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          ts_stageofmeetingrounds as string,",
						"          ts_talentmeetingtype as string,",
						"          instancetypeAZOption as string,",
						"          ts_whooriginatedthemeeting as string,",
						"          onlinemeetingtype as string,",
						"          ts_meetingteam as string,",
						"          ts_othermeetingmethod as string,",
						"          ts_tone as string,",
						"          ts_meetingmethod as string,",
						"          ts_originationmeetingtype as string,",
						"          priorityAZOption as string,",
						"          attachmenterrors as string,",
						"          ts_eventtype as string,",
						"          ts_talentmeetingmethod as string,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as string,",
						"          isworkflowcreated as string,",
						"          isalldayevent as string,",
						"          ts_interview as string,",
						"          isbilled as string,",
						"          isdraft as string,",
						"          ts_keyiractivity as string,",
						"          ts_noninvestor as string,",
						"          ismapiprivate as string,",
						"          isregularactivity as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointment',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedMeetingAppointments",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          haschildrenAZOption as string,",
						"          customertypeAZOption as string,",
						"          ts_recommendationofindividual as string,",
						"          genderAZOption as string,",
						"          address1_addresstypeAZOption as string,",
						"          leadsourceAZOption as string,",
						"          preferredappointmenttimeAZOption as string,",
						"          address2_freighttermsAZOption as string,",
						"          address2_shippingmethodAZOption as string,",
						"          ts_debtsubtype as string,",
						"          msdyn_orgchangestatus as string,",
						"          ts_suffix as string,",
						"          xpd_gender as string,",
						"          ts_title as string,",
						"          paymenttermsAZOption as string,",
						"          accountroleAZOption as string,",
						"          territoryAZOption as string,",
						"          ts_vendortargettrackingrole as string,",
						"          address3_freighttermsAZOption as string,",
						"          address1_shippingmethodAZOption as string,",
						"          preferredappointmentdayAZOption as string,",
						"          customersizeAZOption as string,",
						"          preferredcontactmethodAZOption as string,",
						"          ts_futurecontactmethod as string,",
						"          address3_shippingmethodAZOption as string,",
						"          address2_addresstypeAZOption as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_capabilitiesofindividual as string,",
						"          address3_addresstypeAZOption as string,",
						"          familystatusAZOption as string,",
						"          shippingmethodAZOption as string,",
						"          xpd_availability as string,",
						"          educationAZOption as string,",
						"          address1_freighttermsAZOption as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as string,",
						"          isbackofficecustomer as string,",
						"          donotpostalmail as string,",
						"          xpd_addcontacttooutlook as string,",
						"          ts_centralrelationshipmanager as string,",
						"          msdyn_gdproptout as string,",
						"          xpd_hascompany as string,",
						"          creditonhold as string,",
						"          xpd_benchcandidate as string,",
						"          donotbulkpostalmail as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          xpd_sharepointdocumentlocationcreated as string,",
						"          xpd_available as string,",
						"          ts_leadearlystageinteraction as string,",
						"          participatesinworkflow as string,",
						"          ts_doyouwishtotrackthiscontact as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          marketingonly as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          isautocreate as string,",
						"          donotemail as string,",
						"          ts_unconfirmedemailaddress as string,",
						"          mpe_companysearchbyemail as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          msdyn_segmentidname as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_sensitivityid as string,",
						"          mpe_sensitivityid_entitytype as string,",
						"          mpe_sensitivityidname as string,",
						"          mpe_sensitivitymessage as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contact',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedContacts",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> SystemUserIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypeAZOption as string,",
						"          address1_shippingmethodAZOption as string,",
						"          azurestate as string,",
						"          invitestatusAZOption as string,",
						"          preferredaddressAZOption as string,",
						"          preferredemailAZOption as string,",
						"          outgoingemaildeliverymethod as string,",
						"          preferredphoneAZOption as string,",
						"          emailrouteraccessapproval as string,",
						"          deletedstate as string,",
						"          incomingemaildeliverymethod as string,",
						"          accessmode as string,",
						"          caltype as string,",
						"          address2_addresstypeAZOption as string,",
						"          address2_shippingmethodAZOption as string,",
						"          setupuser as string,",
						"          islicensed as string,",
						"          defaultfilterspopulated as string,",
						"          isactivedirectoryuser as string,",
						"          displayinserviceviews as string,",
						"          msdyn_gdproptout as string,",
						"          isdisabled as string,",
						"          isintegrationuser as string,",
						"          isemailaddressapprovedbyo365admin as string,",
						"          issyncwithdirectory as string,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'systemuser',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedSystemUser",
						"OriginationOpportunityIn, EnrichedOriginationOpportunities join(OriginationOpportunityIn@Id == EnrichedOriginationOpportunities@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Originationjoinoutput",
						"MeetingsAppointmentsIn, EnrichedMeetingAppointments join(MeetingsAppointmentsIn@Id == EnrichedMeetingAppointments@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> AppointmentsJoinOutput",
						"ContactsIn, EnrichedContacts join(ContactsIn@Id == EnrichedContacts@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContactsJoin",
						"AccountIn, EnrichedAccount join(AccountIn@Id == EnrichedAccount@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto',",
						"     scoreColumn: 'AZlabel')~> AccountEnrichedJoin",
						"SystemUserIn, EnrichedSystemUser join(SystemUserIn@Id == EnrichedSystemUser@Id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SystemUserJoin",
						"AccountEnrichedJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'accountENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountCleanSink",
						"AppointmentsJoinOutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointmentENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageCleanSink",
						"ContactsJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contactENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageCleanSink",
						"Originationjoinoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'OriginationOpportunitiesENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationCleanSink",
						"SystemUserJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'SystemUserENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SystemUserSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]",
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PH 1 FullEnrich Only')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedAccount"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedOriginationOpportunities"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedMeetingAppointments"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedContacts"
						},
						{
							"name": "SystemUserIn"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedSystemUser"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "AccountCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "MeetingStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "ContactsStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "OriginationCleanSink"
						},
						{
							"name": "SinkEnrichedOrigination"
						},
						{
							"name": "SinkEnrichedAccount"
						},
						{
							"name": "SinkEnrichedMeeting"
						},
						{
							"name": "SinkEnrichedContacts"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "SystemUserSink"
						}
					],
					"transformations": [
						{
							"name": "Originationjoinoutput"
						},
						{
							"name": "AppointmentsJoinOutput"
						},
						{
							"name": "ContactsJoin"
						},
						{
							"name": "AccountEnrichedJoin"
						},
						{
							"name": "SystemUserJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_primarysecondaryfocus as string,",
						"          customertypeAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          accountclassificationAZlabel as string,",
						"          ts_easeofworking as string,",
						"          ts_ukrow as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          ts_address1addresstype as string,",
						"          xpd_relationshipstatus as string,",
						"          ts_relationship as string,",
						"          xpd_remindermonths as string,",
						"          ts_importance as string,",
						"          address2_freighttermsAZlabel as string,",
						"          ts_irrvsmomperformancemeasure as string,",
						"          ts_introducertype as string,",
						"          accountcategoryAZlabel as string,",
						"          paymenttermsAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          businesstypeAZlabel as string,",
						"          industryAZlabel as string,",
						"          ts_sizeoffirm as string,",
						"          ts_interaction as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          ts_portfoliocompanystatus as string,",
						"          customersizeAZlabel as string,",
						"          xpd_previousinvestorstatus as string,",
						"          ts_recommendationoffirm as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          accountratingAZlabel as string,",
						"          ts_investorstatus as string,",
						"          ts_capabilitiesoffirm as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_nextoriginationmeetingarranged as string,",
						"          ownershipAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_investortype as string,",
						"          shippingmethodAZlabel as string,",
						"          ts_investorregion as string,",
						"          address1_freighttermsAZlabel as string,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as string,",
						"          donotbulkpostalmail as string,",
						"          donotpostalmail as string,",
						"          msdyn_gdproptout as string,",
						"          ts_organisationalchange as string,",
						"          xpd_publictoprivatetracker as string,",
						"          ts_auditor as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          creditonhold as string,",
						"          marketingonly as string,",
						"          participatesinworkflow as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          xpd_setreminder as string,",
						"          ts_personnelchange as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          xpd_rpo as string,",
						"          ts_trackcompany as string,",
						"          donotemail as string,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'account',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedAccount",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_dealannouncedreason as string,",
						"          ts_highprioritynew as string,",
						"          ts_actionstatus as string,",
						"          mpe_targetrelationshipstatus as string,",
						"          mpe_carveout as string,",
						"          ts_producttype as string,",
						"          ts_internalintermediarysource as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_currentactivity as string,",
						"          ts_opportunitystatus as string,",
						"          ts_montaguprimaryoffice as string,",
						"          ts_opportunitytype as string,",
						"          ts_posthumstatus as string,",
						"          ts_meetingremindermonths as string,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as string,",
						"          ts_stagereachedfir as string,",
						"          ts_stagereachedipr as string,",
						"          ts_duplicateopportunityfordiscussion as string,",
						"          mpe_smalltarget as string,",
						"          ts_stagereachedcr as string,",
						"          xpd_includeonallpapers as string,",
						"          ts_sold as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'ts_originationopportunity',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedOriginationOpportunities",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_stageofmeetingrounds as string,",
						"          ts_talentmeetingtype as string,",
						"          instancetypeAZlabel as string,",
						"          ts_whooriginatedthemeeting as string,",
						"          onlinemeetingtype as string,",
						"          ts_meetingteam as string,",
						"          ts_othermeetingmethod as string,",
						"          ts_tone as string,",
						"          ts_meetingmethod as string,",
						"          ts_originationmeetingtype as string,",
						"          priorityAZlabel as string,",
						"          attachmenterrors as string,",
						"          ts_eventtype as string,",
						"          ts_talentmeetingmethod as string,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as string,",
						"          isworkflowcreated as string,",
						"          isalldayevent as string,",
						"          ts_interview as string,",
						"          isbilled as string,",
						"          isdraft as string,",
						"          ts_keyiractivity as string,",
						"          ts_noninvestor as string,",
						"          ismapiprivate as string,",
						"          isregularactivity as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointment',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedMeetingAppointments",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          haschildrenAZlabel as string,",
						"          customertypeAZlabel as string,",
						"          ts_recommendationofindividual as string,",
						"          genderAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          leadsourceAZlabel as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          address2_freighttermsAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_debtsubtype as string,",
						"          msdyn_orgchangestatus as string,",
						"          ts_suffix as string,",
						"          xpd_gender as string,",
						"          ts_title as string,",
						"          paymenttermsAZlabel as string,",
						"          accountroleAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_vendortargettrackingrole as string,",
						"          address3_freighttermsAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          customersizeAZlabel as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          ts_futurecontactmethod as string,",
						"          address3_shippingmethodAZlabel as string,",
						"          address2_addresstypeAZlabel as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_capabilitiesofindividual as string,",
						"          address3_addresstypeAZlabel as string,",
						"          familystatusAZlabel as string,",
						"          shippingmethodAZlabel as string,",
						"          xpd_availability as string,",
						"          educationAZlabel as string,",
						"          address1_freighttermsAZlabel as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as string,",
						"          isbackofficecustomer as string,",
						"          donotpostalmail as string,",
						"          xpd_addcontacttooutlook as string,",
						"          ts_centralrelationshipmanager as string,",
						"          msdyn_gdproptout as string,",
						"          xpd_hascompany as string,",
						"          creditonhold as string,",
						"          xpd_benchcandidate as string,",
						"          donotbulkpostalmail as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          xpd_sharepointdocumentlocationcreated as string,",
						"          xpd_available as string,",
						"          ts_leadearlystageinteraction as string,",
						"          participatesinworkflow as string,",
						"          ts_doyouwishtotrackthiscontact as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          marketingonly as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          isautocreate as string,",
						"          donotemail as string,",
						"          ts_unconfirmedemailaddress as string,",
						"          mpe_companysearchbyemail as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          msdyn_segmentidname as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contact',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedContacts",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> SystemUserIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypeAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          azurestate as string,",
						"          invitestatusAZlabel as string,",
						"          preferredaddressAZlabel as string,",
						"          preferredemailAZlabel as string,",
						"          outgoingemaildeliverymethod as string,",
						"          preferredphoneAZlabel as string,",
						"          emailrouteraccessapproval as string,",
						"          deletedstate as string,",
						"          incomingemaildeliverymethod as string,",
						"          accessmode as string,",
						"          caltype as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          setupuser as string,",
						"          islicensed as string,",
						"          defaultfilterspopulated as string,",
						"          isactivedirectoryuser as string,",
						"          displayinserviceviews as string,",
						"          msdyn_gdproptout as string,",
						"          isdisabled as string,",
						"          isintegrationuser as string,",
						"          isemailaddressapprovedbyo365admin as string,",
						"          issyncwithdirectory as string,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'systemuser',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedSystemUser",
						"OriginationOpportunityIn, EnrichedOriginationOpportunities join(OriginationOpportunityIn@Id == EnrichedOriginationOpportunities@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'right')~> Originationjoinoutput",
						"MeetingsAppointmentsIn, EnrichedMeetingAppointments join(MeetingsAppointmentsIn@Id == EnrichedMeetingAppointments@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> AppointmentsJoinOutput",
						"ContactsIn, EnrichedContacts join(ContactsIn@Id == EnrichedContacts@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContactsJoin",
						"AccountIn, EnrichedAccount join(AccountIn@Id == EnrichedAccount@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto',",
						"     scoreColumn: 'AZlabel')~> AccountEnrichedJoin",
						"SystemUserIn, EnrichedSystemUser join(SystemUserIn@Id == EnrichedSystemUser@Id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SystemUserJoin",
						"AccountEnrichedJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'accountENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountCleanSink",
						"AppointmentsJoinOutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointmentENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageCleanSink",
						"ContactsJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contactENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageCleanSink",
						"Originationjoinoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'OriginationOpportunitiesENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationCleanSink",
						"EnrichedOriginationOpportunities sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkEnrichedOrigination",
						"EnrichedAccount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkEnrichedAccount",
						"EnrichedMeetingAppointments sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> SinkEnrichedMeeting",
						"EnrichedContacts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedContacts",
						"SystemUserJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'SystemUserENRICHED',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SystemUserSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]",
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PH 4 BA Activity DatasetReports')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "AccountIn"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "OriginationOpportunityIn"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "MeetingsAppointmentsIn"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "ContactsIn"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "SystemuserSource"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "AccountCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "MeetingStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "ContactsStageCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "OriginationCleanSink"
						},
						{
							"linkedService": {
								"referenceName": "ReportsAnalytics",
								"type": "LinkedServiceReference"
							},
							"name": "SystemUserCleanSink"
						}
					],
					"transformations": [
						{
							"name": "MeetingsCleanselect"
						},
						{
							"name": "contactscleanselect"
						},
						{
							"name": "OrigiopportCleanout"
						},
						{
							"name": "AccountsSelectClean"
						},
						{
							"name": "SystemUserSelect"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          state as string,",
						"          status as string,",
						"          customertype as string,",
						"          address1_addresstype as string,",
						"          accountclassification as string,",
						"          preferredappointmenttime as string,",
						"          address2_freightterms as string,",
						"          accountcategory as string,",
						"          paymentterms as string,",
						"          preferredappointmentday as string,",
						"          businesstype as string,",
						"          industry as string,",
						"          address1_shippingmethod as string,",
						"          customersize as string,",
						"          preferredcontactmethod as string,",
						"          accountrating as string,",
						"          address2_addresstype as string,",
						"          address2_shippingmethod as string,",
						"          ownership as string,",
						"          territory as string,",
						"          shippingmethod as string,",
						"          address1_freightterms as string,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          customertypeAZOption as string,",
						"          address1_addresstypeAZOption as string,",
						"          accountclassificationAZOption as string,",
						"          preferredappointmenttimeAZOption as string,",
						"          address2_freighttermsAZOption as string,",
						"          accountcategoryAZOption as string,",
						"          paymenttermsAZOption as string,",
						"          preferredappointmentdayAZOption as string,",
						"          businesstypeAZOption as string,",
						"          industryAZOption as string,",
						"          address1_shippingmethodAZOption as string,",
						"          customersizeAZOption as string,",
						"          preferredcontactmethodAZOption as string,",
						"          accountratingAZOption as string,",
						"          address2_addresstypeAZOption as string,",
						"          address2_shippingmethodAZOption as string,",
						"          ownershipAZOption as string,",
						"          territoryAZOption as string,",
						"          shippingmethodAZOption as string,",
						"          address1_freighttermsAZOption as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'accountENRICHED',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string,",
						"          state as string,",
						"          status as string,",
						"          stateAZOption as string,",
						"          statusAZOption as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'OriginationOpportunitiesENRICHED',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          state as string,",
						"          status as string,",
						"          instancetype as string,",
						"          priority as string,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          instancetypeAZOption as string,",
						"          priorityAZOption as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointmentENRICHED',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string,",
						"          mpe_sensitivityid as string,",
						"          mpe_sensitivityid_entitytype as string,",
						"          mpe_sensitivityidname as string,",
						"          mpe_sensitivitymessage as string,",
						"          state as string,",
						"          status as string,",
						"          haschildren as string,",
						"          customertype as string,",
						"          gender as string,",
						"          address1_addresstype as string,",
						"          leadsource as string,",
						"          preferredappointmenttime as string,",
						"          address2_freightterms as string,",
						"          address2_shippingmethod as string,",
						"          paymentterms as string,",
						"          accountrole as string,",
						"          territory as string,",
						"          address3_freightterms as string,",
						"          address1_shippingmethod as string,",
						"          preferredappointmentday as string,",
						"          customersize as string,",
						"          preferredcontactmethod as string,",
						"          address3_shippingmethod as string,",
						"          address2_addresstype as string,",
						"          address3_addresstype as string,",
						"          familystatus as string,",
						"          shippingmethod as string,",
						"          education as string,",
						"          address1_freightterms as string,",
						"          stateAZOption as string,",
						"          statusAZOption as string,",
						"          haschildrenAZOption as string,",
						"          customertypeAZOption as string,",
						"          genderAZOption as string,",
						"          address1_addresstypeAZOption as string,",
						"          leadsourceAZOption as string,",
						"          preferredappointmenttimeAZOption as string,",
						"          address2_freighttermsAZOption as string,",
						"          address2_shippingmethodAZOption as string,",
						"          paymenttermsAZOption as string,",
						"          accountroleAZOption as string,",
						"          territoryAZOption as string,",
						"          address3_freighttermsAZOption as string,",
						"          address1_shippingmethodAZOption as string,",
						"          preferredappointmentdayAZOption as string,",
						"          customersizeAZOption as string,",
						"          preferredcontactmethodAZOption as string,",
						"          address3_shippingmethodAZOption as string,",
						"          address2_addresstypeAZOption as string,",
						"          address3_addresstypeAZOption as string,",
						"          familystatusAZOption as string,",
						"          shippingmethodAZOption as string,",
						"          educationAZOption as string,",
						"          address1_freighttermsAZOption as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contactENRICHED',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: true) ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string,",
						"          address1_addresstype as string,",
						"          address1_shippingmethod as string,",
						"          invitestatus as string,",
						"          preferredaddress as string,",
						"          preferredemail as string,",
						"          preferredphone as string,",
						"          address2_addresstype as string,",
						"          address2_shippingmethod as string,",
						"          address1_addresstypeAZOption as string,",
						"          address1_shippingmethodAZOption as string,",
						"          invitestatusAZOption as string,",
						"          preferredaddressAZOption as string,",
						"          preferredemailAZOption as string,",
						"          preferredphoneAZOption as string,",
						"          address2_addresstypeAZOption as string,",
						"          address2_shippingmethodAZOption as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'SystemUserENRICHED',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> SystemuserSource",
						"MeetingsAppointmentsIn select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MeetingsCleanselect",
						"ContactsIn select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> contactscleanselect",
						"OriginationOpportunityIn select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrigiopportCleanout",
						"AccountIn select(mapColumn(",
						"          Id_YouHaveChanged = Id,",
						"          ts_primarysecondaryfocus_No_you_have = ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountsSelectClean",
						"SystemuserSource select(mapColumn(",
						"          id = Id,",
						"          calendarid,",
						"          siteid,",
						"          azureactivedirectoryobjectid,",
						"          modifiedby,",
						"          address1_line1,",
						"          internalemailaddress,",
						"          siteidname,",
						"          yomifullname,",
						"          mobilephone,",
						"          lastname,",
						"          address1_city,",
						"          title,",
						"          address1_composite,",
						"          firstname,",
						"          address1_addressid,",
						"          userpuid,",
						"          parentsystemuserid,",
						"          entityimageid,",
						"          address1_country,",
						"          businessunitidname,",
						"          address1_telephone1,",
						"          organizationid,",
						"          defaultmailboxname,",
						"          identityid,",
						"          address2_addressid,",
						"          createdon,",
						"          domainname,",
						"          modifiedbyyominame,",
						"          address1_postalcode,",
						"          ts_inititals,",
						"          windowsliveid,",
						"          queueidname,",
						"          modifiedbyname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SystemUserSelect",
						"AccountsSelectClean sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'accountENRICHEDFinal',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountCleanSink",
						"MeetingsCleanselect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointmentENRICHEDFinal',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageCleanSink",
						"contactscleanselect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contactENRICHEDFinal',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageCleanSink",
						"OrigiopportCleanout sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'OriginationOpportunitiesENRICHEDFinal',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationCleanSink",
						"SystemUserSelect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'SystemUserENRICHEDFinal',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     allowCopyCommand: true,",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SystemUserCleanSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PH Full InputDataflow_Split Table')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"name": "SystemuserSource"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedAccount"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedOriginationOpportunities"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedMeetingAppointments"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedContacts"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedSystemuser"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AccountTable",
								"type": "DatasetReference"
							},
							"name": "AccountCleanSink"
						},
						{
							"dataset": {
								"referenceName": "Appointment",
								"type": "DatasetReference"
							},
							"name": "MeetingStageCleanSink"
						},
						{
							"dataset": {
								"referenceName": "Contacttable",
								"type": "DatasetReference"
							},
							"name": "ContactsStageCleanSink"
						},
						{
							"dataset": {
								"referenceName": "OriginationOpp",
								"type": "DatasetReference"
							},
							"name": "OriginationCleanSink"
						},
						{
							"dataset": {
								"referenceName": "Systemusertable",
								"type": "DatasetReference"
							},
							"name": "SystemUserCleanSink"
						},
						{
							"name": "SinkEnrichedOrigination"
						},
						{
							"name": "SinkEnrichedAccount"
						},
						{
							"name": "SinkEnrichedMeeting"
						},
						{
							"name": "SinkEnrichedContacts"
						},
						{
							"name": "SinkEnrichedSystemUser"
						}
					],
					"transformations": [
						{
							"name": "MeetingsCleanselect"
						},
						{
							"name": "contactscleanselect"
						},
						{
							"name": "OrigiopportCleanout"
						},
						{
							"name": "AccountsSelectClean"
						},
						{
							"name": "SystemUserSelect"
						},
						{
							"name": "Originationjoinoutput"
						},
						{
							"name": "EnrichedAccountSelect"
						},
						{
							"name": "OutputEnrichedOrigination"
						},
						{
							"name": "OutputEnrichedMeetingAppointments"
						},
						{
							"name": "OutputEnrichedContacts"
						},
						{
							"name": "OutputEnrichedSystemuser"
						},
						{
							"name": "AppointmentsJoinOutput"
						},
						{
							"name": "ContactsJoin"
						},
						{
							"name": "SystemUserJoin"
						},
						{
							"name": "AccountEnrichedJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypecode as long,",
						"          address1_shippingmethodcode as long,",
						"          azurestate as long,",
						"          invitestatuscode as long,",
						"          preferredaddresscode as long,",
						"          preferredemailcode as long,",
						"          outgoingemaildeliverymethod as long,",
						"          preferredphonecode as long,",
						"          emailrouteraccessapproval as long,",
						"          deletedstate as long,",
						"          incomingemaildeliverymethod as long,",
						"          accessmode as long,",
						"          caltype as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          setupuser as boolean,",
						"          islicensed as boolean,",
						"          defaultfilterspopulated as boolean,",
						"          isactivedirectoryuser as boolean,",
						"          displayinserviceviews as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          isdisabled as boolean,",
						"          isintegrationuser as boolean,",
						"          isemailaddressapprovedbyo365admin as boolean,",
						"          issyncwithdirectory as boolean,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> SystemuserSource",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_primarysecondaryfocus as string,",
						"          customertypeAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          accountclassificationAZlabel as string,",
						"          ts_easeofworking as string,",
						"          ts_ukrow as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          ts_address1addresstype as string,",
						"          xpd_relationshipstatus as string,",
						"          ts_relationship as string,",
						"          xpd_remindermonths as string,",
						"          ts_importance as string,",
						"          address2_freighttermsAZlabel as string,",
						"          ts_irrvsmomperformancemeasure as string,",
						"          ts_introducertype as string,",
						"          accountcategoryAZlabel as string,",
						"          paymenttermsAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          businesstypeAZlabel as string,",
						"          industryAZlabel as string,",
						"          ts_sizeoffirm as string,",
						"          ts_interaction as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          ts_portfoliocompanystatus as string,",
						"          customersizeAZlabel as string,",
						"          xpd_previousinvestorstatus as string,",
						"          ts_recommendationoffirm as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          accountratingAZlabel as string,",
						"          ts_investorstatus as string,",
						"          ts_capabilitiesoffirm as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_nextoriginationmeetingarranged as string,",
						"          ownershipAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_investortype as string,",
						"          shippingmethodAZlabel as string,",
						"          ts_investorregion as string,",
						"          address1_freighttermsAZlabel as string,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as string,",
						"          donotbulkpostalmail as string,",
						"          donotpostalmail as string,",
						"          msdyn_gdproptout as string,",
						"          ts_organisationalchange as string,",
						"          xpd_publictoprivatetracker as string,",
						"          ts_auditor as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          creditonhold as string,",
						"          marketingonly as string,",
						"          participatesinworkflow as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          xpd_setreminder as string,",
						"          ts_personnelchange as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          xpd_rpo as string,",
						"          ts_trackcompany as string,",
						"          donotemail as string,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'account',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedAccount",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_dealannouncedreason as string,",
						"          ts_highprioritynew as string,",
						"          ts_actionstatus as string,",
						"          mpe_targetrelationshipstatus as string,",
						"          mpe_carveout as string,",
						"          ts_producttype as string,",
						"          ts_internalintermediarysource as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_currentactivity as string,",
						"          ts_opportunitystatus as string,",
						"          ts_montaguprimaryoffice as string,",
						"          ts_opportunitytype as string,",
						"          ts_posthumstatus as string,",
						"          ts_meetingremindermonths as string,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as string,",
						"          ts_stagereachedfir as string,",
						"          ts_stagereachedipr as string,",
						"          ts_duplicateopportunityfordiscussion as string,",
						"          mpe_smalltarget as string,",
						"          ts_stagereachedcr as string,",
						"          xpd_includeonallpapers as string,",
						"          ts_sold as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'ts_originationopportunity',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedOriginationOpportunities",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_stageofmeetingrounds as string,",
						"          ts_talentmeetingtype as string,",
						"          instancetypeAZlabel as string,",
						"          ts_whooriginatedthemeeting as string,",
						"          onlinemeetingtype as string,",
						"          ts_meetingteam as string,",
						"          ts_othermeetingmethod as string,",
						"          ts_tone as string,",
						"          ts_meetingmethod as string,",
						"          ts_originationmeetingtype as string,",
						"          priorityAZlabel as string,",
						"          attachmenterrors as string,",
						"          ts_eventtype as string,",
						"          ts_talentmeetingmethod as string,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as string,",
						"          isworkflowcreated as string,",
						"          isalldayevent as string,",
						"          ts_interview as string,",
						"          isbilled as string,",
						"          isdraft as string,",
						"          ts_keyiractivity as string,",
						"          ts_noninvestor as string,",
						"          ismapiprivate as string,",
						"          isregularactivity as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointment',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedMeetingAppointments",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          haschildrenAZlabel as string,",
						"          customertypeAZlabel as string,",
						"          ts_recommendationofindividual as string,",
						"          genderAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          leadsourceAZlabel as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          address2_freighttermsAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_debtsubtype as string,",
						"          msdyn_orgchangestatus as string,",
						"          ts_suffix as string,",
						"          xpd_gender as string,",
						"          ts_title as string,",
						"          paymenttermsAZlabel as string,",
						"          accountroleAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_vendortargettrackingrole as string,",
						"          address3_freighttermsAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          customersizeAZlabel as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          ts_futurecontactmethod as string,",
						"          address3_shippingmethodAZlabel as string,",
						"          address2_addresstypeAZlabel as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_capabilitiesofindividual as string,",
						"          address3_addresstypeAZlabel as string,",
						"          familystatusAZlabel as string,",
						"          shippingmethodAZlabel as string,",
						"          xpd_availability as string,",
						"          educationAZlabel as string,",
						"          address1_freighttermsAZlabel as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as string,",
						"          isbackofficecustomer as string,",
						"          donotpostalmail as string,",
						"          xpd_addcontacttooutlook as string,",
						"          ts_centralrelationshipmanager as string,",
						"          msdyn_gdproptout as string,",
						"          xpd_hascompany as string,",
						"          creditonhold as string,",
						"          xpd_benchcandidate as string,",
						"          donotbulkpostalmail as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          xpd_sharepointdocumentlocationcreated as string,",
						"          xpd_available as string,",
						"          ts_leadearlystageinteraction as string,",
						"          participatesinworkflow as string,",
						"          ts_doyouwishtotrackthiscontact as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          marketingonly as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          isautocreate as string,",
						"          donotemail as string,",
						"          ts_unconfirmedemailaddress as string,",
						"          mpe_companysearchbyemail as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          msdyn_segmentidname as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contact',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedContacts",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          address1_addresstypeAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          azurestate as string,",
						"          invitestatusAZlabel as string,",
						"          preferredaddressAZlabel as string,",
						"          preferredemailAZlabel as string,",
						"          outgoingemaildeliverymethod as string,",
						"          preferredphoneAZlabel as string,",
						"          emailrouteraccessapproval as string,",
						"          deletedstate as string,",
						"          incomingemaildeliverymethod as string,",
						"          accessmode as string,",
						"          caltype as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          setupuser as string,",
						"          islicensed as string,",
						"          defaultfilterspopulated as string,",
						"          isactivedirectoryuser as string,",
						"          displayinserviceviews as string,",
						"          msdyn_gdproptout as string,",
						"          isdisabled as string,",
						"          isintegrationuser as string,",
						"          isemailaddressapprovedbyo365admin as string,",
						"          issyncwithdirectory as string,",
						"          calendarid as string,",
						"          calendarid_entitytype as string,",
						"          mobileofflineprofileid as string,",
						"          mobileofflineprofileid_entitytype as string,",
						"          queueid as string,",
						"          queueid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          defaultmailbox as string,",
						"          defaultmailbox_entitytype as string,",
						"          positionid as string,",
						"          positionid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          siteid as string,",
						"          siteid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          parentsystemuserid as string,",
						"          parentsystemuserid_entitytype as string,",
						"          businessunitid as string,",
						"          businessunitid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          traversedpath as string,",
						"          azureactivedirectoryobjectid as string,",
						"          address1_line1 as string,",
						"          internalemailaddress as string,",
						"          siteidname as string,",
						"          modifiedon as timestamp,",
						"          address1_line3 as string,",
						"          skills as string,",
						"          yomifirstname as string,",
						"          address1_longitude as double,",
						"          yomifullname as string,",
						"          entityimage_timestamp as long,",
						"          parentsystemuseridname as string,",
						"          address2_county as string,",
						"          transactioncurrencyidname as string,",
						"          activedirectoryguid as string,",
						"          utcconversiontimezonecode as long,",
						"          passporthi as long,",
						"          homephone as string,",
						"          parentsystemuseridyominame as string,",
						"          address2_stateorprovince as string,",
						"          mobilephone as string,",
						"          address2_country as string,",
						"          address2_line2 as string,",
						"          disabledreason as string,",
						"          lastname as string,",
						"          address1_city as string,",
						"          address1_utcoffset as long,",
						"          userlicensetype as long,",
						"          nickname as string,",
						"          passportlo as long,",
						"          title as string,",
						"          address2_latitude as double,",
						"          applicationid as string,",
						"          address1_composite as string,",
						"          firstname as string,",
						"          address2_postalcode as string,",
						"          employeeid as string,",
						"          processid as string,",
						"          mobileofflineprofileidname as string,",
						"          governmentid as string,",
						"          entityimage_url as string,",
						"          address2_line3 as string,",
						"          azuredeletedon as timestamp,",
						"          timezoneruleversionnumber as long,",
						"          address1_county as string,",
						"          address2_telephone2 as string,",
						"          address2_postofficebox as string,",
						"          address2_telephone1 as string,",
						"          yomilastname as string,",
						"          address2_telephone3 as string,",
						"          address1_addressid as string,",
						"          territoryidname as string,",
						"          overriddencreatedon as timestamp,",
						"          userpuid as string,",
						"          createdonbehalfbyname as string,",
						"          systemuserid as string,",
						"          address2_name as string,",
						"          middlename as string,",
						"          entityimageid as string,",
						"          applicationiduri as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          address2_composite as string,",
						"          address1_country as string,",
						"          mobilealertemail as string,",
						"          sharepointemailaddress as string,",
						"          businessunitidname as string,",
						"          address1_stateorprovince as string,",
						"          exchangerate as decimal(38,10),",
						"          jobtitle as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          latestupdatetime as timestamp,",
						"          address1_postofficebox as string,",
						"          organizationid as string,",
						"          yammeremailaddress as string,",
						"          defaultmailboxname as string,",
						"          identityid as long,",
						"          yomimiddlename as string,",
						"          address2_utcoffset as long,",
						"          photourl as string,",
						"          personalemailaddress as string,",
						"          address2_addressid as string,",
						"          address2_longitude as double,",
						"          createdon as string,",
						"          createdbyname as string,",
						"          domainname as string,",
						"          modifiedbyyominame as string,",
						"          address2_fax as string,",
						"          address1_line2 as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          address2_upszone as string,",
						"          salutation as string,",
						"          address1_postalcode as string,",
						"          stageid as string,",
						"          defaultodbfoldername as string,",
						"          positionidname as string,",
						"          ts_inititals as string,",
						"          yammeruserid as string,",
						"          importsequencenumber as long,",
						"          address2_city as string,",
						"          windowsliveid as string,",
						"          organizationidname as string,",
						"          versionnumber as long,",
						"          queueidname as string,",
						"          address1_name as string,",
						"          address1_fax as string,",
						"          address1_latitude as double,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          address2_line1 as string,",
						"          address1_upszone as string,",
						"          fullname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'systemuser',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedSystemuser",
						"MeetingsAppointmentsIn select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MeetingsCleanselect",
						"ContactsIn select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> contactscleanselect",
						"OriginationOpportunityIn select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrigiopportCleanout",
						"AccountIn select(mapColumn(",
						"          Id,",
						"          ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountsSelectClean",
						"SystemuserSource select(mapColumn(",
						"          id = Id,",
						"          calendarid,",
						"          siteid,",
						"          azureactivedirectoryobjectid,",
						"          modifiedby,",
						"          address1_line1,",
						"          internalemailaddress,",
						"          siteidname,",
						"          yomifullname,",
						"          mobilephone,",
						"          lastname,",
						"          address1_city,",
						"          title,",
						"          address1_composite,",
						"          firstname,",
						"          address1_addressid,",
						"          userpuid,",
						"          parentsystemuserid,",
						"          entityimageid,",
						"          address1_country,",
						"          businessunitidname,",
						"          address1_telephone1,",
						"          organizationid,",
						"          defaultmailboxname,",
						"          identityid,",
						"          address2_addressid,",
						"          createdon,",
						"          domainname,",
						"          modifiedbyyominame,",
						"          address1_postalcode,",
						"          ts_inititals,",
						"          windowsliveid,",
						"          queueidname,",
						"          modifiedbyname",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SystemUserSelect",
						"OrigiopportCleanout, OutputEnrichedOrigination join(OrigiopportCleanout@Id == OutputEnrichedOrigination@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'right')~> Originationjoinoutput",
						"EnrichedAccount select(mapColumn(",
						"          Id,",
						"          stateAZLabel = stateAZlabel,",
						"          statusAZLabel = statusAZlabel,",
						"          customertypeAZLabel = customertypeAZlabel,",
						"          address1_addresstypeAZLabel = address1_addresstypeAZlabel,",
						"          accountclassificationAZLabel = accountclassificationAZlabel,",
						"          preferredappointmenttimeAZLabel = preferredappointmenttimeAZlabel,",
						"          address2_freighttermsAZLabel = address2_freighttermsAZlabel,",
						"          accountcategoryAZLabel = accountcategoryAZlabel,",
						"          paymenttermsAZLabel = paymenttermsAZlabel,",
						"          preferredappointmentdayAZLabel = preferredappointmentdayAZlabel,",
						"          businesstypeAZLabel = businesstypeAZlabel,",
						"          industryAZLabel = industryAZlabel,",
						"          address1_shippingmethodAZLabel = address1_shippingmethodAZlabel,",
						"          customersizeAZLabel = customersizeAZlabel,",
						"          preferredcontactmethodAZLabel = preferredcontactmethodAZlabel,",
						"          accountratingAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address2_shippingmethodAZlabel,",
						"          ownershipAZlabel,",
						"          territoryAZlabel,",
						"          shippingmethodAZlabel,",
						"          address1_freighttermsAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> EnrichedAccountSelect",
						"EnrichedOriginationOpportunities select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedOrigination",
						"EnrichedMeetingAppointments select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel,",
						"          instancetypeAZlabel,",
						"          priorityAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedMeetingAppointments",
						"EnrichedContacts select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel,",
						"          haschildrenAZlabel,",
						"          customertypeAZlabel,",
						"          genderAZlabel,",
						"          address1_addresstypeAZlabel,",
						"          leadsourceAZlabel,",
						"          preferredappointmenttimeAZlabel,",
						"          address2_freighttermsAZlabel,",
						"          address2_shippingmethodAZlabel,",
						"          paymenttermsAZlabel,",
						"          accountroleAZlabel,",
						"          territoryAZlabel,",
						"          address3_freighttermsAZlabel,",
						"          address1_shippingmethodAZlabel,",
						"          preferredappointmentdayAZlabel,",
						"          customersizeAZlabel,",
						"          preferredcontactmethodAZlabel,",
						"          address3_shippingmethodAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address3_addresstypeAZlabel,",
						"          familystatusAZlabel,",
						"          shippingmethodAZlabel,",
						"          educationAZlabel,",
						"          address1_freighttermsAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedContacts",
						"EnrichedSystemuser select(mapColumn(",
						"          Id,",
						"          address1_addresstypeAZlabel,",
						"          address1_shippingmethodAZlabel,",
						"          invitestatusAZlabel,",
						"          preferredaddressAZlabel,",
						"          preferredemailAZlabel,",
						"          preferredphoneAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address2_shippingmethodAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedSystemuser",
						"MeetingsCleanselect, EnrichedMeetingAppointments join(MeetingsCleanselect@Id == EnrichedMeetingAppointments@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> AppointmentsJoinOutput",
						"contactscleanselect, EnrichedContacts join(contactscleanselect@Id == EnrichedContacts@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContactsJoin",
						"SystemUserSelect, EnrichedSystemuser join(SystemUserSelect@id == EnrichedSystemuser@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SystemUserJoin",
						"AccountsSelectClean, EnrichedAccountSelect join(fuzzyCompare(AccountsSelectClean@Id, EnrichedAccountSelect@Id, 80.00),",
						"     joinType:'left',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: false,",
						"     scoreColumn:'AZlabel',",
						"     broadcast: 'off')~> AccountEnrichedJoin",
						"AccountEnrichedJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountCleanSink",
						"AppointmentsJoinOutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageCleanSink",
						"ContactsJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageCleanSink",
						"Originationjoinoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationCleanSink",
						"SystemUserJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SystemUserCleanSink",
						"OutputEnrichedOrigination sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedOrigination",
						"EnrichedAccountSelect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedAccount",
						"OutputEnrichedMeetingAppointments sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedMeeting",
						"OutputEnrichedContacts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedContacts",
						"OutputEnrichedSystemuser sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedSystemUser"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AccountTable')]",
				"[concat(variables('factoryId'), '/datasets/Appointment')]",
				"[concat(variables('factoryId'), '/datasets/Contacttable')]",
				"[concat(variables('factoryId'), '/datasets/OriginationOpp')]",
				"[concat(variables('factoryId'), '/datasets/Systemusertable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports Flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Flowlet",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "CDMImportAccount"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "CDMContact"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "CMDImportMeetings"
						},
						{
							"linkedService": {
								"referenceName": "prod-synapse-uks-001-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "CMDImportOpportunities"
						},
						{
							"name": "CDMSystemUsers"
						}
					],
					"sinks": [],
					"transformations": [
						{
							"name": "DataOut"
						},
						{
							"name": "ContactOutput"
						},
						{
							"name": "Meeting"
						},
						{
							"name": "Opportunities"
						},
						{
							"name": "SystemUser"
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'contact',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> CDMImportAccount",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'Contact',",
						"     format: 'cdm',",
						"     manifestType: 'manifest',",
						"     manifestName: 'model.json',",
						"     local: true,",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> CDMContact",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'appointment',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> CMDImportMeetings",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     entity: 'ts_originationopportunity',",
						"     format: 'cdm',",
						"     manifestType: 'model',",
						"     folderPath: '',",
						"     fileSystem: 'dataverse-montagu-org5a2bcccf') ~> CMDImportOpportunities",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'systemuser') ~> CDMSystemUsers",
						"CDMImportAccount output() ~> DataOut",
						"CDMContact output() ~> ContactOutput",
						"CMDImportMeetings output() ~> Meeting",
						"CMDImportOpportunities output() ~> Opportunities",
						"CDMSystemUsers output() ~> SystemUser"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/prod-synapse-uks-001-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/debugInputDataflow_Split Table')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AccountIn"
						},
						{
							"name": "OriginationOpportunityIn"
						},
						{
							"name": "MeetingsAppointmentsIn"
						},
						{
							"name": "ContactsIn"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedAccount"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedOriginationOpportunities"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedMeetingAppointments"
						},
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "EnrichedContacts"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AccountTable",
								"type": "DatasetReference"
							},
							"name": "AccountCleanSink"
						},
						{
							"dataset": {
								"referenceName": "Appointment",
								"type": "DatasetReference"
							},
							"name": "MeetingStageCleanSink"
						},
						{
							"dataset": {
								"referenceName": "Contacttable",
								"type": "DatasetReference"
							},
							"name": "ContactsStageCleanSink"
						},
						{
							"dataset": {
								"referenceName": "OriginationOpp",
								"type": "DatasetReference"
							},
							"name": "OriginationCleanSink"
						},
						{
							"name": "SinkEnrichedOrigination"
						},
						{
							"name": "SinkEnrichedAccount"
						},
						{
							"name": "SinkEnrichedMeeting"
						},
						{
							"name": "SinkEnrichedContacts"
						}
					],
					"transformations": [
						{
							"name": "MeetingsCleanselect"
						},
						{
							"name": "contactscleanselect"
						},
						{
							"name": "OrigiopportCleanout"
						},
						{
							"name": "AccountsSelectClean"
						},
						{
							"name": "Originationjoinoutput"
						},
						{
							"name": "EnrichedAccountSelect"
						},
						{
							"name": "OutputEnrichedOrigination"
						},
						{
							"name": "OutputEnrichedMeetingAppointments"
						},
						{
							"name": "OutputEnrichedContacts"
						},
						{
							"name": "AppointmentsJoinOutput"
						},
						{
							"name": "ContactsJoin"
						},
						{
							"name": "AccountEnrichedJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_primarysecondaryfocus as long,",
						"          customertypecode as long,",
						"          ts_relationship as long,",
						"          address1_addresstypecode as long,",
						"          accountclassificationcode as long,",
						"          ts_easeofworking as long,",
						"          ts_ukrow as long,",
						"          preferredappointmenttimecode as long,",
						"          ts_address1addresstype as long,",
						"          xpd_relationshipstatus as long,",
						"          ts_introducertype as long,",
						"          xpd_remindermonths as long,",
						"          ts_importance as long,",
						"          address2_freighttermscode as long,",
						"          ts_irrvsmomperformancemeasure as long,",
						"          accountcategorycode as long,",
						"          paymenttermscode as long,",
						"          preferredappointmentdaycode as long,",
						"          businesstypecode as long,",
						"          industrycode as long,",
						"          ts_sizeoffirm as long,",
						"          ts_interaction as long,",
						"          address1_shippingmethodcode as long,",
						"          ts_portfoliocompanystatus as long,",
						"          customersizecode as long,",
						"          xpd_previousinvestorstatus as long,",
						"          ts_recommendationoffirm as long,",
						"          preferredcontactmethodcode as long,",
						"          accountratingcode as long,",
						"          ts_investorstatus as long,",
						"          ts_capabilitiesoffirm as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          address2_addresstypecode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_nextoriginationmeetingarranged as long,",
						"          ownershipcode as long,",
						"          territorycode as long,",
						"          ts_investortype as long,",
						"          shippingmethodcode as long,",
						"          ts_investorregion as long,",
						"          address1_freighttermscode as long,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          xpd_montagulevel as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotpostalmail as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          ts_organisationalchange as boolean,",
						"          xpd_publictoprivatetracker as boolean,",
						"          ts_auditor as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          creditonhold as boolean,",
						"          marketingonly as boolean,",
						"          participatesinworkflow as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          xpd_setreminder as boolean,",
						"          ts_personnelchange as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          xpd_rpo as boolean,",
						"          ts_trackcompany as boolean,",
						"          donotemail as boolean,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'account') ~> AccountIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_dealannouncedreason as long,",
						"          ts_highprioritynew as long,",
						"          ts_actionstatus as long,",
						"          mpe_targetrelationshipstatus as long,",
						"          ts_producttype as long,",
						"          ts_internalintermediarysource as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_currentactivity as long,",
						"          ts_opportunitystatus as long,",
						"          ts_montaguprimaryoffice as long,",
						"          ts_opportunitytype as long,",
						"          ts_posthumstatus as long,",
						"          ts_meetingremindermonths as long,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as boolean,",
						"          ts_stagereachedfir as boolean,",
						"          ts_stagereachedipr as boolean,",
						"          ts_duplicateopportunityfordiscussion as boolean,",
						"          mpe_smalltarget as boolean,",
						"          ts_stagereachedcr as boolean,",
						"          xpd_includeonallpapers as boolean,",
						"          ts_sold as boolean,",
						"          xpd_sharepointlocationcreated as boolean,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string,",
						"          mpe_carveout as long,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          mpe_targetbusiness_parentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'ts_originationopportunity') ~> OriginationOpportunityIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          ts_stageofmeetingrounds as long,",
						"          ts_talentmeetingtype as long,",
						"          instancetypecode as long,",
						"          ts_whooriginatedthemeeting as long,",
						"          onlinemeetingtype as long,",
						"          ts_meetingteam as long,",
						"          ts_othermeetingmethod as long,",
						"          ts_tone as long,",
						"          ts_meetingmethod as long,",
						"          ts_originationmeetingtype as long,",
						"          prioritycode as long,",
						"          attachmenterrors as long,",
						"          ts_eventtype as long,",
						"          ts_talentmeetingmethod as long,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as boolean,",
						"          isworkflowcreated as boolean,",
						"          isalldayevent as boolean,",
						"          ts_interview as boolean,",
						"          isbilled as boolean,",
						"          isdraft as boolean,",
						"          ts_keyiractivity as boolean,",
						"          ts_noninvestor as boolean,",
						"          ismapiprivate as boolean,",
						"          isregularactivity as boolean,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'appointment') ~> MeetingsAppointmentsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          statecode as long,",
						"          statuscode as long,",
						"          haschildrencode as long,",
						"          customertypecode as long,",
						"          ts_recommendationofindividual as long,",
						"          gendercode as long,",
						"          address1_addresstypecode as long,",
						"          leadsourcecode as long,",
						"          preferredappointmenttimecode as long,",
						"          address2_freighttermscode as long,",
						"          address2_shippingmethodcode as long,",
						"          ts_debtsubtype as long,",
						"          msdyn_orgchangestatus as long,",
						"          ts_suffix as long,",
						"          xpd_gender as long,",
						"          ts_title as long,",
						"          paymenttermscode as long,",
						"          accountrolecode as long,",
						"          territorycode as long,",
						"          ts_vendortargettrackingrole as long,",
						"          address3_freighttermscode as long,",
						"          address1_shippingmethodcode as long,",
						"          preferredappointmentdaycode as long,",
						"          customersizecode as long,",
						"          preferredcontactmethodcode as long,",
						"          ts_futurecontactmethod as long,",
						"          address3_shippingmethodcode as long,",
						"          address2_addresstypecode as long,",
						"          mpe_flowlastrunoutcome as long,",
						"          ts_capabilitiesofindividual as long,",
						"          address3_addresstypecode as long,",
						"          familystatuscode as long,",
						"          shippingmethodcode as long,",
						"          xpd_availability as long,",
						"          educationcode as long,",
						"          address1_freighttermscode as long,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as boolean,",
						"          isbackofficecustomer as boolean,",
						"          donotpostalmail as boolean,",
						"          xpd_addcontacttooutlook as boolean,",
						"          ts_centralrelationshipmanager as boolean,",
						"          msdyn_gdproptout as boolean,",
						"          xpd_hascompany as boolean,",
						"          creditonhold as boolean,",
						"          xpd_benchcandidate as boolean,",
						"          donotbulkpostalmail as boolean,",
						"          donotsendmm as boolean,",
						"          donotbulkemail as boolean,",
						"          followemail as boolean,",
						"          xpd_sharepointdocumentlocationcreated as boolean,",
						"          xpd_available as boolean,",
						"          ts_leadearlystageinteraction as boolean,",
						"          participatesinworkflow as boolean,",
						"          ts_doyouwishtotrackthiscontact as boolean,",
						"          merged as boolean,",
						"          ts_validated as boolean,",
						"          marketingonly as boolean,",
						"          donotfax as boolean,",
						"          isprivate as boolean,",
						"          donotphone as boolean,",
						"          isautocreate as boolean,",
						"          donotemail as boolean,",
						"          ts_unconfirmedemailaddress as boolean,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double,",
						"          mpe_companysearchbyemail as boolean,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          msdyn_segmentidname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     store: 'synapse',",
						"     databaseType: 'spark',",
						"     format: 'table',",
						"     database: 'dataverse_montagu_org5a2bcccf',",
						"     tableName: 'contact') ~> ContactsIn",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_primarysecondaryfocus as string,",
						"          customertypeAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          accountclassificationAZlabel as string,",
						"          ts_easeofworking as string,",
						"          ts_ukrow as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          ts_address1addresstype as string,",
						"          xpd_relationshipstatus as string,",
						"          ts_relationship as string,",
						"          xpd_remindermonths as string,",
						"          ts_importance as string,",
						"          address2_freighttermsAZlabel as string,",
						"          ts_irrvsmomperformancemeasure as string,",
						"          ts_introducertype as string,",
						"          accountcategoryAZlabel as string,",
						"          paymenttermsAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          businesstypeAZlabel as string,",
						"          industryAZlabel as string,",
						"          ts_sizeoffirm as string,",
						"          ts_interaction as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          ts_portfoliocompanystatus as string,",
						"          customersizeAZlabel as string,",
						"          xpd_previousinvestorstatus as string,",
						"          ts_recommendationoffirm as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          accountratingAZlabel as string,",
						"          ts_investorstatus as string,",
						"          ts_capabilitiesoffirm as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          address2_addresstypeAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_nextoriginationmeetingarranged as string,",
						"          ownershipAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_investortype as string,",
						"          shippingmethodAZlabel as string,",
						"          ts_investorregion as string,",
						"          address1_freighttermsAZlabel as string,",
						"          xpd_function as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_quickcapturesectors as string,",
						"          ts_roletypes as string,",
						"          ts_companytype as string,",
						"          xpd_level as string,",
						"          ts_indicativeclientbase as string,",
						"          xpd_specialisms as string,",
						"          ts_vendorsummary as string,",
						"          ts_producttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_quickcapturegeography as string,",
						"          xpd_roletypes as string,",
						"          mpe_livedeal as string,",
						"          donotbulkpostalmail as string,",
						"          donotpostalmail as string,",
						"          msdyn_gdproptout as string,",
						"          ts_organisationalchange as string,",
						"          xpd_publictoprivatetracker as string,",
						"          ts_auditor as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          creditonhold as string,",
						"          marketingonly as string,",
						"          participatesinworkflow as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          xpd_setreminder as string,",
						"          ts_personnelchange as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          xpd_rpo as string,",
						"          ts_trackcompany as string,",
						"          donotemail as string,",
						"          parentaccountid as string,",
						"          parentaccountid_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_countryofeconomicoriginforthecapital as string,",
						"          ts_countryofeconomicoriginforthecapital_entitytype as string,",
						"          xpd_reminderto as string,",
						"          xpd_reminderto_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          ts_validatedby as string,",
						"          ts_validatedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_primarymperelationshipmanager as string,",
						"          ts_primarymperelationshipmanager_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          ts_headofficeid as string,",
						"          ts_headofficeid_entitytype as string,",
						"          ts_address1country as string,",
						"          ts_address1country_entitytype as string,",
						"          ts_address1usstate as string,",
						"          ts_address1usstate_entitytype as string,",
						"          msdyn_salesaccelerationinsightid as string,",
						"          msdyn_salesaccelerationinsightid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          ts_originationlead1 as string,",
						"          ts_originationlead1_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_originationlead2 as string,",
						"          ts_originationlead2_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          mpe_coinvestquestionnaireid as string,",
						"          mpe_coinvestquestionnaireid_entitytype as string,",
						"          ts_hub as string,",
						"          ts_hub_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          ts_currentauditor as string,",
						"          ts_currentauditor_entitytype as string,",
						"          primarycontactid as string,",
						"          primarycontactid_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_fund as string,",
						"          xpd_fund_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          territoryid as string,",
						"          territoryid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          xpd_totalinstitutionalcommitments_base as decimal(38,0),",
						"          ts_minimumticketsize_base as decimal(38,4),",
						"          xpd_totalinstitutionalcommitments as decimal(38,0),",
						"          aging30 as decimal(38,0),",
						"          creditlimit as decimal(38,0),",
						"          creditlimit_base as decimal(38,0),",
						"          ts_totalcommitments_base as decimal(38,4),",
						"          aging60 as decimal(38,0),",
						"          ts_transfersin_base as decimal(38,0),",
						"          aging90 as decimal(38,0),",
						"          ts_maximumticketsize as decimal(38,4),",
						"          ts_totalaum_base as decimal(38,0),",
						"          marketcap_base as decimal(38,0),",
						"          aging60_base as decimal(38,0),",
						"          aging90_base as decimal(38,0),",
						"          ts_transfersout as decimal(38,0),",
						"          ts_maximumticketsize_base as decimal(38,4),",
						"          ts_originalcommitments_base as decimal(38,0),",
						"          revenue as decimal(38,0),",
						"          ts_totalcommitments as decimal(38,4),",
						"          ts_transfersout_base as decimal(38,0),",
						"          ts_totalaum as decimal(38,0),",
						"          ts_commitmentreductions_base as decimal(38,0),",
						"          ts_commitmentreductions as decimal(38,0),",
						"          marketcap as decimal(38,0),",
						"          ts_originalcommitments as decimal(38,0),",
						"          ts_minimumticketsize as decimal(38,4),",
						"          revenue_base as decimal(38,0),",
						"          openrevenue_base as decimal(38,0),",
						"          aging30_base as decimal(38,0),",
						"          openrevenue as decimal(38,0),",
						"          ts_transfersin as decimal(38,0),",
						"          ts_othernotes as string,",
						"          ts_transfersin_date as timestamp,",
						"          msdyn_salesaccelerationinsightidname as string,",
						"          address1_county as string,",
						"          openrevenue_date as timestamp,",
						"          ts_recommendedbyname as string,",
						"          ts_relationshipinteractioncomments as string,",
						"          ts_originationlead2yominame as string,",
						"          parentaccountidname as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          ts_countryofeconomicoriginforthecapitalname as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          ts_lastoriginationmeeting as timestamp,",
						"          address2_utcoffset as long,",
						"          address1_upszone as string,",
						"          ts_originalcommitments_state as long,",
						"          ts_typicalcost as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          accountnumber as string,",
						"          ts_currentauditoryominame as string,",
						"          ts_originalcommitments_date as timestamp,",
						"          lastonholdtime as timestamp,",
						"          ts_sectorscoveredbyfirm as string,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address2_upszone as string,",
						"          opendeals_state as long,",
						"          xpd_functionuse_text as string,",
						"          slainvokedidname as string,",
						"          address2_longitude as double,",
						"          defaultpricelevelidname as string,",
						"          stockexchange as string,",
						"          mpe_liveofferingscount_date as timestamp,",
						"          xpd_relationshipcomments as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          ts_currentauditorname as string,",
						"          xpd_remindertoyominame as string,",
						"          ts_address1usstatename as string,",
						"          ts_tempcompanytype as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          ts_formername as string,",
						"          yominame as string,",
						"          createdbyyominame as string,",
						"          ts_cityofvisit as string,",
						"          address2_telephone1 as string,",
						"          ts_globalgeographiescoveredids as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          ts_mpeapproachstrategy as string,",
						"          address2_line2 as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          li_companyid as long,",
						"          transactioncurrencyidname as string,",
						"          entityimage_url as string,",
						"          xpd_relationshipstatuschangeddate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          mpe_liveofferingscount_state as long,",
						"          xpd_numberofcoinvestinvestments_date as timestamp,",
						"          ts_validateddate as timestamp,",
						"          owneridname as string,",
						"          xpd_generalcomments as string,",
						"          ts_companylegalname as string,",
						"          description as string,",
						"          ts_validatedbyname as string,",
						"          originatingleadidyominame as string,",
						"          opendeals as long,",
						"          xpd_numberofopportunitiesshown_state as long,",
						"          address2_postalcode as string,",
						"          websiteurl as string,",
						"          xpd_fundname as string,",
						"          address1_utcoffset as long,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          fax as string,",
						"          address1_line3 as string,",
						"          ts_monthssincelastmeeting as long,",
						"          ts_hubname as string,",
						"          address2_line1 as string,",
						"          ts_capiqticket as string,",
						"          address2_stateorprovince as string,",
						"          address2_name as string,",
						"          ts_transfersout_state as long,",
						"          xpd_numberofopportunitiesshown as long,",
						"          primarytwitterid as string,",
						"          mpe_coinvestquestionnaireidname as string,",
						"          xpd_numberofopportunitiesshown_date as timestamp,",
						"          xpd_preferentialterms as string,",
						"          address1_primarycontactname as string,",
						"          territoryidname as string,",
						"          ts_processstatus as string,",
						"          address1_name as string,",
						"          address2_telephone2 as string,",
						"          address2_telephone3 as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          ts_companynumber as string,",
						"          createdon as string,",
						"          mpe_liveofferingscount as long,",
						"          traversedpath as string,",
						"          address1_stateorprovince as string,",
						"          ts_transfersin_state as long,",
						"          address2_addressid as string,",
						"          ts_monthlyreviewmeetingname as string,",
						"          primarysatoriid as string,",
						"          telephone3 as string,",
						"          openrevenue_state as long,",
						"          ts_usesprovidedids as string,",
						"          ts_originationcomments as string,",
						"          lastusedincampaign as timestamp,",
						"          primarycontactidname as string,",
						"          ts_originationlead1name as string,",
						"          ts_headofficeidname as string,",
						"          msdyn_segmentidname as string,",
						"          ts_montagucomments as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_numberofcoinvestinvestments as long,",
						"          ts_capitaliqlink as string,",
						"          ts_primarymperelationshipmanagername as string,",
						"          mpe_relationshipstatus_text as string,",
						"          xpd_datereminderwasset as timestamp,",
						"          xpd_numberofcoinvestinvestments_state as long,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          teamsfollowed as long,",
						"          ts_originationlead2name as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          entityimage_timestamp as long,",
						"          tickersymbol as string,",
						"          ts_theirprogrammecomments as string,",
						"          xpd_companyuse_text as string,",
						"          modifiedbyname as string,",
						"          owneridtype as string,",
						"          sic as string,",
						"          sharesoutstanding as long,",
						"          opendeals_date as timestamp,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_globalgeographiescoveredbyfirm as string,",
						"          ts_recommendationoffirmupdated as timestamp,",
						"          ts_lastmet as timestamp,",
						"          ts_reminderdatesetto as timestamp,",
						"          ts_commitmentreductions_state as long,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          ts_alias as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_transfersout_date as timestamp,",
						"          ts_address1countryname as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          mpe_documentsetid as string,",
						"          telephone1 as string,",
						"          ts_legacycompanytypes as string,",
						"          ts_validatedbyyominame as string,",
						"          address1_composite as string,",
						"          ts_investorgroupgatekeeperid as string,",
						"          primarycontactidyominame as string,",
						"          address2_country as string,",
						"          xpd_recommendationcomments as string,",
						"          owneridyominame as string,",
						"          createdbyexternalpartyyominame as string,",
						"          ts_originationlead1yominame as string,",
						"          ts_usesprovidedbyfirm as string,",
						"          xpd_recommendingportco as string,",
						"          address1_country as string,",
						"          ts_commitmentreductions_date as timestamp,",
						"          name as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          xpd_remindertoname as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          masteraccountidname as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          overriddencreatedon as timestamp,",
						"          parentaccountidyominame as string,",
						"          ts_specificareaofexpertisecomments as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          address1_line1 as string,",
						"          address2_primarycontactname as string,",
						"          address1_line2 as string,",
						"          xpd_reasonaction as string,",
						"          ts_primarymperelationshipmanageryominame as string,",
						"          processid as string,",
						"          ts_sectorscoveredids as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          accountid as string,",
						"          modifiedon as timestamp,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_dealstageofmostrecentopportunity as string,",
						"          address2_composite as string,",
						"          masteraccountidyominame as string,",
						"          numberofemployees as long,",
						"          address1_fax as string,",
						"          address2_line3 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'account',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedAccount",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_dealannouncedreason as string,",
						"          ts_highprioritynew as string,",
						"          ts_actionstatus as string,",
						"          mpe_targetrelationshipstatus as string,",
						"          mpe_carveout as string,",
						"          ts_producttype as string,",
						"          ts_internalintermediarysource as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_currentactivity as string,",
						"          ts_opportunitystatus as string,",
						"          ts_montaguprimaryoffice as string,",
						"          ts_opportunitytype as string,",
						"          ts_posthumstatus as string,",
						"          ts_meetingremindermonths as string,",
						"          ts_choppedreason as string,",
						"          ts_setreminder as string,",
						"          ts_stagereachedfir as string,",
						"          ts_stagereachedipr as string,",
						"          ts_duplicateopportunityfordiscussion as string,",
						"          mpe_smalltarget as string,",
						"          ts_stagereachedcr as string,",
						"          xpd_includeonallpapers as string,",
						"          ts_sold as string,",
						"          xpd_sharepointlocationcreated as string,",
						"          ts_statuschangedby as string,",
						"          ts_statuschangedby_entitytype as string,",
						"          ts_buyer as string,",
						"          ts_buyer_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_reminderto as string,",
						"          ts_reminderto_entitytype as string,",
						"          mpe_productid as string,",
						"          mpe_productid_entitytype as string,",
						"          ts_targetbusiness as string,",
						"          ts_targetbusiness_entitytype as string,",
						"          ts_firstreferralcompany as string,",
						"          ts_firstreferralcompany_entitytype as string,",
						"          ts_deallead as string,",
						"          ts_deallead_entitytype as string,",
						"          ts_montaguowner as string,",
						"          ts_montaguowner_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          ts_firstreferralcontact as string,",
						"          ts_firstreferralcontact_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_managerwedback as string,",
						"          ts_managerwedback_entitytype as string,",
						"          ts_country as string,",
						"          ts_country_entitytype as string,",
						"          mpe_targetbusiness_parentid as string,",
						"          mpe_targetbusiness_parentid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          ts_sellmandate as string,",
						"          ts_sellmandate_entitytype as string,",
						"          ts_estebitda_base as decimal(38,4),",
						"          ts_estebit_base as decimal(38,4),",
						"          ts_estebitda as decimal(38,4),",
						"          ts_estebit as decimal(38,4),",
						"          ts_estturnover_base as decimal(38,4),",
						"          ts_estdealsize as decimal(38,4),",
						"          ts_estdealsize_base as decimal(38,4),",
						"          ts_estturnover as decimal(38,4),",
						"          ts_buyeryominame as string,",
						"          modifiedon as timestamp,",
						"          ts_statuschangedbyname as string,",
						"          ts_managerwedbackyominame as string,",
						"          xpd_montaguprojectname as string,",
						"          transactioncurrencyidname as string,",
						"          ts_nextsteps as string,",
						"          ts_montaguowneryominame as string,",
						"          ts_firstreferralcontactname as string,",
						"          ts_opportunitydescription as string,",
						"          ts_buyerpaidxltmebitda as decimal(38,1),",
						"          ts_targetbusinessyominame as string,",
						"          ts_montaguownername as string,",
						"          ts_managerwedbackname as string,",
						"          ts_opportunitystage as string,",
						"          ts_otherdocumentsurl as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_documentsetid as string,",
						"          ts_buyername as string,",
						"          ts_firstreferralcontactyominame as string,",
						"          createdon as string,",
						"          ts_sellmandateyominame as string,",
						"          mpe_montaguprimaryofficestring as string,",
						"          ts_statuschangedbyyominame as string,",
						"          ts_firstreferralcompanyname as string,",
						"          owneridyominame as string,",
						"          ts_choppedcomments as string,",
						"          timezoneruleversionnumber as long,",
						"          createdbyname as string,",
						"          ts_dealleadname as string,",
						"          owningbusinessunitname as string,",
						"          ts_dealleadyominame as string,",
						"          ts_lastdatestatuschanged as timestamp,",
						"          traversedpath as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_iprdocumenturl as string,",
						"          createdonbehalfbyname as string,",
						"          ts_sellmandatename as string,",
						"          owneridtype as string,",
						"          owneridname as string,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          mpe_productidname as string,",
						"          mpe_targetbusiness_parentidyominame as string,",
						"          ts_originationopportunityid as string,",
						"          ts_crdocumenturl as string,",
						"          ts_datedealannounced as timestamp,",
						"          processid as string,",
						"          mpe_montaguprimaryofficeowner as string,",
						"          ts_reason as string,",
						"          ts_targetbusinessname as string,",
						"          ts_remindertoname as string,",
						"          ts_postcompletionnoteurl as string,",
						"          ts_name as string,",
						"          stageid as string,",
						"          ts_currentopportunitystatus as string,",
						"          ts_firstreferralcompanyyominame as string,",
						"          mpe_flowlastrundate as timestamp,",
						"          ts_firdocumenturl as string,",
						"          modifiedbyyominame as string,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_movedoutofwipdate as timestamp,",
						"          ts_equitychequesize as decimal(38,2),",
						"          utcconversiontimezonecode as long,",
						"          mpe_targetbusiness_parentidname as string,",
						"          ts_weofferedxltmebitda as decimal(38,1),",
						"          importsequencenumber as long,",
						"          ts_remindertoyominame as string,",
						"          ts_companyid as long,",
						"          ts_datereminderwasset as timestamp,",
						"          versionnumber as long,",
						"          ts_originationid as long,",
						"          ts_countryname as string,",
						"          ts_choppeddate as timestamp,",
						"          mpe_posthunstatustext as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          ts_humdate as timestamp,",
						"          ts_sellmandateidtype as string,",
						"          ts_dateofreminder as timestamp,",
						"          ts_humurl as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'ts_originationopportunity',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedOriginationOpportunities",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          ts_stageofmeetingrounds as string,",
						"          ts_talentmeetingtype as string,",
						"          instancetypeAZlabel as string,",
						"          ts_whooriginatedthemeeting as string,",
						"          onlinemeetingtype as string,",
						"          ts_meetingteam as string,",
						"          ts_othermeetingmethod as string,",
						"          ts_tone as string,",
						"          ts_meetingmethod as string,",
						"          ts_originationmeetingtype as string,",
						"          priorityAZlabel as string,",
						"          attachmenterrors as string,",
						"          ts_eventtype as string,",
						"          ts_talentmeetingmethod as string,",
						"          ts_productsdiscussed as string,",
						"          ts_contentcovered as string,",
						"          isonlinemeeting as string,",
						"          isworkflowcreated as string,",
						"          isalldayevent as string,",
						"          ts_interview as string,",
						"          isbilled as string,",
						"          isdraft as string,",
						"          ts_keyiractivity as string,",
						"          ts_noninvestor as string,",
						"          ismapiprivate as string,",
						"          isregularactivity as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          ts_investorgroup as string,",
						"          ts_investorgroup_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          regardingobjectid as string,",
						"          regardingobjectid_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ts_officemet as string,",
						"          ts_officemet_entitytype as string,",
						"          ts_taskowner as string,",
						"          ts_taskowner_entitytype as string,",
						"          serviceid as string,",
						"          serviceid_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          requiredattendees as string,",
						"          optionalattendees as string,",
						"          organizer as string,",
						"          scheduledend as timestamp,",
						"          ts_taskdescription as string,",
						"          modifiedon as timestamp,",
						"          ts_purpose as string,",
						"          overriddencreatedon as timestamp,",
						"          ts_taskownername as string,",
						"          activityadditionalparams as string,",
						"          ts_tonepersonalities as string,",
						"          seriesid as string,",
						"          transactioncurrencyidname as string,",
						"          activityid as string,",
						"          modifiedfieldsmask as string,",
						"          utcconversiontimezonecode as long,",
						"          ts_officemetname as string,",
						"          scheduledstart as timestamp,",
						"          outlookownerapptid as long,",
						"          ts_topicscovered as string,",
						"          ts_objective as string,",
						"          onholdtime as long,",
						"          onlinemeetingjoinurl as string,",
						"          ts_notes as string,",
						"          originalstartdate as timestamp,",
						"          ts_opportunitiesdiscussed as string,",
						"          ts_sectorscoveredbyfirm as string,",
						"          attachmentcount as long,",
						"          exchangerate as decimal(38,10),",
						"          ts_originationcommentsnotes as string,",
						"          category as string,",
						"          createdon as string,",
						"          ts_eventdescription as string,",
						"          globalobjectid as string,",
						"          onlinemeetingid as string,",
						"          serviceidname as string,",
						"          owneridyominame as string,",
						"          description as string,",
						"          subcategory as string,",
						"          owningbusinessunitname as string,",
						"          ts_taskduedate as timestamp,",
						"          traversedpath as string,",
						"          sortdate as timestamp,",
						"          createdonbehalfbyname as string,",
						"          ts_sectorscoveredids as string,",
						"          safedescription as string,",
						"          ts_taskowneryominame as string,",
						"          owneridtype as string,",
						"          isunsafe as long,",
						"          modifiedonbehalfbyname as string,",
						"          createdonbehalfbyyominame as string,",
						"          ts_conferencename as string,",
						"          timezoneruleversionnumber as long,",
						"          actualend as timestamp,",
						"          regardingobjectidname as string,",
						"          processid as string,",
						"          activitytypecode as string,",
						"          actualstart as timestamp,",
						"          xpd_listofexternalattendees as string,",
						"          slainvokedidname as string,",
						"          location as string,",
						"          subject as string,",
						"          createdbyname as string,",
						"          actualdurationminutes as long,",
						"          modifiedbyyominame as string,",
						"          lastonholdtime as timestamp,",
						"          modifiedonbehalfbyyominame as string,",
						"          ts_attendeestoaddtocrm as string,",
						"          regardingobjectidyominame as string,",
						"          regardingobjecttypecode as string,",
						"          stageid as string,",
						"          scheduleddurationminutes as long,",
						"          ts_sourceid as string,",
						"          ts_investorgroupyominame as string,",
						"          importsequencenumber as long,",
						"          subscriptionid as string,",
						"          onlinemeetingchatid as string,",
						"          ts_lpupdates as string,",
						"          ts_executivesummary as string,",
						"          ts_investorgroupname as string,",
						"          ts_meetingcity as string,",
						"          modifiedbyname as string,",
						"          createdbyyominame as string,",
						"          owneridname as string,",
						"          ts_theirprogramme as string,",
						"          ts_ifdeclinedreason as string,",
						"          slaname as string,",
						"          versionnumber as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'appointment',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedMeetingAppointments",
						"source(output(",
						"          Id as string,",
						"          SinkCreatedOn as timestamp,",
						"          SinkModifiedOn as timestamp,",
						"          stateAZlabel as string,",
						"          statusAZlabel as string,",
						"          haschildrenAZlabel as string,",
						"          customertypeAZlabel as string,",
						"          ts_recommendationofindividual as string,",
						"          genderAZlabel as string,",
						"          address1_addresstypeAZlabel as string,",
						"          leadsourceAZlabel as string,",
						"          preferredappointmenttimeAZlabel as string,",
						"          address2_freighttermsAZlabel as string,",
						"          address2_shippingmethodAZlabel as string,",
						"          ts_debtsubtype as string,",
						"          msdyn_orgchangestatus as string,",
						"          ts_suffix as string,",
						"          xpd_gender as string,",
						"          ts_title as string,",
						"          paymenttermsAZlabel as string,",
						"          accountroleAZlabel as string,",
						"          territoryAZlabel as string,",
						"          ts_vendortargettrackingrole as string,",
						"          address3_freighttermsAZlabel as string,",
						"          address1_shippingmethodAZlabel as string,",
						"          preferredappointmentdayAZlabel as string,",
						"          customersizeAZlabel as string,",
						"          preferredcontactmethodAZlabel as string,",
						"          ts_futurecontactmethod as string,",
						"          address3_shippingmethodAZlabel as string,",
						"          address2_addresstypeAZlabel as string,",
						"          mpe_flowlastrunoutcome as string,",
						"          ts_capabilitiesofindividual as string,",
						"          address3_addresstypeAZlabel as string,",
						"          familystatusAZlabel as string,",
						"          shippingmethodAZlabel as string,",
						"          xpd_availability as string,",
						"          educationAZlabel as string,",
						"          address1_freighttermsAZlabel as string,",
						"          ts_quickcaptureuses as string,",
						"          xpd_montagulevel as string,",
						"          ts_permanentinterim as string,",
						"          ts_ircontactrole as string,",
						"          xpd_level as string,",
						"          ts_languagesspokenwritten as string,",
						"          ts_contacttype as string,",
						"          ts_montaguoffice as string,",
						"          ts_roletypes as string,",
						"          xpd_specialisms as string,",
						"          ts_quickcapturesectors as string,",
						"          xpd_function as string,",
						"          ts_producttype as string,",
						"          ts_quickcapturegeography as string,",
						"          ts_productsinterestedin as string,",
						"          ts_potentialrolecandidate as string,",
						"          isbackofficecustomer as string,",
						"          donotpostalmail as string,",
						"          xpd_addcontacttooutlook as string,",
						"          ts_centralrelationshipmanager as string,",
						"          msdyn_gdproptout as string,",
						"          xpd_hascompany as string,",
						"          creditonhold as string,",
						"          xpd_benchcandidate as string,",
						"          donotbulkpostalmail as string,",
						"          donotsendmm as string,",
						"          donotbulkemail as string,",
						"          followemail as string,",
						"          xpd_sharepointdocumentlocationcreated as string,",
						"          xpd_available as string,",
						"          ts_leadearlystageinteraction as string,",
						"          participatesinworkflow as string,",
						"          ts_doyouwishtotrackthiscontact as string,",
						"          merged as string,",
						"          ts_validated as string,",
						"          marketingonly as string,",
						"          donotfax as string,",
						"          isprivate as string,",
						"          donotphone as string,",
						"          isautocreate as string,",
						"          donotemail as string,",
						"          ts_unconfirmedemailaddress as string,",
						"          mpe_companysearchbyemail as string,",
						"          preferredsystemuserid as string,",
						"          preferredsystemuserid_entitytype as string,",
						"          mpe_accountid as string,",
						"          mpe_accountid_entitytype as string,",
						"          owningbusinessunit as string,",
						"          owningbusinessunit_entitytype as string,",
						"          ts_recommendedby as string,",
						"          ts_recommendedby_entitytype as string,",
						"          ts_previousemployerid as string,",
						"          ts_previousemployerid_entitytype as string,",
						"          preferredserviceid as string,",
						"          preferredserviceid_entitytype as string,",
						"          msdyn_segmentid as string,",
						"          msdyn_segmentid_entitytype as string,",
						"          parentcontactid as string,",
						"          parentcontactid_entitytype as string,",
						"          transactioncurrencyid as string,",
						"          transactioncurrencyid_entitytype as string,",
						"          ts_pa as string,",
						"          ts_pa_entitytype as string,",
						"          ts_businessaddress as string,",
						"          ts_businessaddress_entitytype as string,",
						"          modifiedbyexternalparty as string,",
						"          modifiedbyexternalparty_entitytype as string,",
						"          slainvokedid as string,",
						"          slainvokedid_entitytype as string,",
						"          slaid as string,",
						"          slaid_entitytype as string,",
						"          originatingleadid as string,",
						"          originatingleadid_entitytype as string,",
						"          masterid as string,",
						"          masterid_entitytype as string,",
						"          defaultpricelevelid as string,",
						"          defaultpricelevelid_entitytype as string,",
						"          parent_contactid as string,",
						"          parent_contactid_entitytype as string,",
						"          owninguser as string,",
						"          owninguser_entitytype as string,",
						"          createdbyexternalparty as string,",
						"          createdbyexternalparty_entitytype as string,",
						"          preferredequipmentid as string,",
						"          preferredequipmentid_entitytype as string,",
						"          xpd_referredbyinternal as string,",
						"          xpd_referredbyinternal_entitytype as string,",
						"          modifiedonbehalfby as string,",
						"          modifiedonbehalfby_entitytype as string,",
						"          owningteam as string,",
						"          owningteam_entitytype as string,",
						"          xpd_homecountry as string,",
						"          xpd_homecountry_entitytype as string,",
						"          ts_placementfirmintroducedby as string,",
						"          ts_placementfirmintroducedby_entitytype as string,",
						"          modifiedby as string,",
						"          modifiedby_entitytype as string,",
						"          accountid as string,",
						"          accountid_entitytype as string,",
						"          createdonbehalfby as string,",
						"          createdonbehalfby_entitytype as string,",
						"          createdby as string,",
						"          createdby_entitytype as string,",
						"          ownerid as string,",
						"          ownerid_entitytype as string,",
						"          parentcustomerid as string,",
						"          parentcustomerid_entitytype as string,",
						"          xpd_referredbyexternal as string,",
						"          xpd_referredbyexternal_entitytype as string,",
						"          aging30 as decimal(38,2),",
						"          creditlimit_base as decimal(38,4),",
						"          aging60 as decimal(38,2),",
						"          aging90 as decimal(38,2),",
						"          aging60_base as decimal(38,4),",
						"          aging90_base as decimal(38,4),",
						"          annualincome_base as decimal(38,4),",
						"          creditlimit as decimal(38,2),",
						"          annualincome as decimal(38,2),",
						"          aging30_base as decimal(38,4),",
						"          ts_othernotes as string,",
						"          xpd_referredbyinternalyominame as string,",
						"          address1_county as string,",
						"          yomilastname as string,",
						"          address3_utcoffset as long,",
						"          ts_recommendedbyname as string,",
						"          description as string,",
						"          li_membertoken as string,",
						"          department as string,",
						"          xpd_roletypes_text as string,",
						"          address1_addressid as string,",
						"          importsequencenumber as long,",
						"          address1_longitude as double,",
						"          address3_fax as string,",
						"          managername as string,",
						"          entityimageid as string,",
						"          telephone2 as string,",
						"          parentcustomeridtype as string,",
						"          address2_upszone as string,",
						"          address1_upszone as string,",
						"          xpd_recommendingportfoliocompaniesrecommended as string,",
						"          lastonholdtime as timestamp,",
						"          address1_telephone1 as string,",
						"          address1_telephone2 as string,",
						"          address1_telephone3 as string,",
						"          address1_fax as string,",
						"          address3_telephone1 as string,",
						"          address3_telephone2 as string,",
						"          address3_telephone3 as string,",
						"          fax as string,",
						"          assistantname as string,",
						"          address2_line3 as string,",
						"          accountidyominame as string,",
						"          parentcontactidyominame as string,",
						"          mpe_accountidyominame as string,",
						"          slainvokedidname as string,",
						"          defaultpricelevelidname as string,",
						"          fullname as string,",
						"          address2_longitude as double,",
						"          subscriptionid as string,",
						"          originatingleadidname as string,",
						"          slaname as string,",
						"          versionnumber as long,",
						"          address1_latitude as double,",
						"          createdbyyominame as string,",
						"          parent_contactidname as string,",
						"          address2_telephone1 as string,",
						"          pager as string,",
						"          salutation as string,",
						"          mpe_accountidname as string,",
						"          xpd_functionuse_text as string,",
						"          accountidname as string,",
						"          mpe_companysummary as string,",
						"          parent_contactidyominame as string,",
						"          preferredserviceidname as string,",
						"          address2_city as string,",
						"          address3_postalcode as string,",
						"          address2_line2 as string,",
						"          li_companyid as long,",
						"          ts_otherphonelabel as string,",
						"          ts_reportingemail as string,",
						"          address3_upszone as string,",
						"          transactioncurrencyidname as string,",
						"          address3_county as string,",
						"          entityimage_url as string,",
						"          governmentid as string,",
						"          callback as string,",
						"          business2 as string,",
						"          createdonbehalfbyname as string,",
						"          ts_validateddate as timestamp,",
						"          address2_telephone2 as string,",
						"          owneridname as string,",
						"          originatingleadidyominame as string,",
						"          ts_otherlanguages as string,",
						"          address2_postalcode as string,",
						"          birthdate as timestamp,",
						"          parentcontactidname as string,",
						"          spousesname as string,",
						"          xpd_compensationdate as timestamp,",
						"          address1_utcoffset as long,",
						"          address3_line1 as string,",
						"          traversedpath as string,",
						"          exchangerate as decimal(38,10),",
						"          mpe_flowlastrundate as timestamp,",
						"          address1_line3 as string,",
						"          address3_country as string,",
						"          mpe_documentsetid as string,",
						"          address2_line1 as string,",
						"          ts_previousemployeridyominame as string,",
						"          middlename as string,",
						"          managerphone as string,",
						"          address2_stateorprovince as string,",
						"          childrensnames as string,",
						"          address2_name as string,",
						"          address3_addressid as string,",
						"          address3_stateorprovince as string,",
						"          ts_sectorspecialtyids as string,",
						"          businesscardattributes as string,",
						"          anniversary as timestamp,",
						"          ts_employmentstartdate as timestamp,",
						"          ts_legacycontacttypes as string,",
						"          address1_primarycontactname as string,",
						"          address2_utcoffset as long,",
						"          home2 as string,",
						"          ts_geographicspecialtyids as string,",
						"          address1_name as string,",
						"          ts_recommendationcomments as string,",
						"          address2_telephone3 as string,",
						"          address3_primarycontactname as string,",
						"          ftpsiteurl as string,",
						"          address1_postalcode as string,",
						"          createdon as string,",
						"          address1_stateorprovince as string,",
						"          yomimiddlename as string,",
						"          jobtitle as string,",
						"          telephone3 as string,",
						"          ts_usesspeciality as string,",
						"          msdyn_segmentidname as string,",
						"          ts_knowntouserinitials as string,",
						"          address2_fax as string,",
						"          createdbyname as string,",
						"          xpd_contactuse_text as string,",
						"          ts_sourceid as string,",
						"          address2_addressid as string,",
						"          employeeid as string,",
						"          address1_postofficebox as string,",
						"          address1_city as string,",
						"          ts_businessaddressname as string,",
						"          teamsfollowed as long,",
						"          ts_cv as string,",
						"          timezoneruleversionnumber as long,",
						"          modifiedonbehalfbyyominame as string,",
						"          xpd_hrcompensation as string,",
						"          ts_currentbonusandorupliftconsiderations as string,",
						"          modifiedbyname as string,",
						"          address3_line2 as string,",
						"          yomifullname as string,",
						"          owneridtype as string,",
						"          entityimage_timestamp as long,",
						"          ts_placementfirmintroducedbyyominame as string,",
						"          xpd_previousrole as string,",
						"          ts_compensation as string,",
						"          address2_postofficebox as string,",
						"          emailaddress3 as string,",
						"          emailaddress2 as string,",
						"          emailaddress1 as string,",
						"          ts_interactioncontactuniqueidentifier as string,",
						"          ts_investmentcafeid as string,",
						"          websiteurl as string,",
						"          nickname as string,",
						"          ts_lastmet as timestamp,",
						"          address3_name as string,",
						"          ts_usesspecialtyids as string,",
						"          ts_linkedinurl as string,",
						"          lastname as string,",
						"          address3_longitude as double,",
						"          xpd_referredbyexternalidtype as string,",
						"          parentcustomeridname as string,",
						"          owningbusinessunitname as string,",
						"          onholdtime as long,",
						"          createdonbehalfbyyominame as string,",
						"          preferredsystemuseridyominame as string,",
						"          createdbyexternalpartyname as string,",
						"          ts_tone as string,",
						"          telephone1 as string,",
						"          overriddencreatedon as timestamp,",
						"          address3_postofficebox as string,",
						"          assistantphone as string,",
						"          address1_composite as string,",
						"          address3_line3 as string,",
						"          address2_country as string,",
						"          xpd_referredbyinternalname as string,",
						"          mobilephone as string,",
						"          owneridyominame as string,",
						"          address1_line1 as string,",
						"          createdbyexternalpartyyominame as string,",
						"          xpd_referredbyexternalyominame as string,",
						"          yomifirstname as string,",
						"          mastercontactidname as string,",
						"          address3_city as string,",
						"          address1_country as string,",
						"          externaluseridentifier as string,",
						"          modifiedbyexternalpartyyominame as string,",
						"          firstname as string,",
						"          xpd_hrcurrentbonusandorupliftconsiderations as string,",
						"          stageid as string,",
						"          modifiedonbehalfbyname as string,",
						"          xpd_homecountryname as string,",
						"          mastercontactidyominame as string,",
						"          suffix as string,",
						"          ts_payominame as string,",
						"          lastusedincampaign as timestamp,",
						"          ts_geographicspeciality as string,",
						"          xpd_recruitmentareateam_text as string,",
						"          ts_retentionreviewdate as timestamp,",
						"          parentcustomeridyominame as string,",
						"          timespentbymeonemailandmeetings as string,",
						"          address2_latitude as double,",
						"          xpd_availablefrom as timestamp,",
						"          address3_composite as string,",
						"          xpd_recommendingportco as string,",
						"          preferredsystemuseridname as string,",
						"          utcconversiontimezonecode as long,",
						"          address2_county as string,",
						"          ts_paname as string,",
						"          contactid as string,",
						"          address2_primarycontactname as string,",
						"          ts_specificareasofexpertisecomments as string,",
						"          address1_line2 as string,",
						"          ts_recommendationofindividualupdated as timestamp,",
						"          xpd_referredbyexternalname as string,",
						"          ts_placementfirmintroducedbyname as string,",
						"          ts_sectorspeciality as string,",
						"          ts_previousemployeridname as string,",
						"          processid as string,",
						"          ts_recommendedbyyominame as string,",
						"          modifiedon as timestamp,",
						"          modifiedbyexternalpartyname as string,",
						"          ts_relevantsituations as string,",
						"          businesscard as string,",
						"          company as string,",
						"          preferredequipmentidname as string,",
						"          modifiedbyyominame as string,",
						"          ts_preferredname as string,",
						"          address2_composite as string,",
						"          numberofchildren as long,",
						"          address3_latitude as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'contact',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> EnrichedContacts",
						"MeetingsAppointmentsIn select(mapColumn(",
						"          Id,",
						"          ts_meetingteam,",
						"          ts_othermeetingmethod,",
						"          isonlinemeeting,",
						"          isalldayevent,",
						"          regardingobjectid,",
						"          ts_taskowner,",
						"          scheduledend,",
						"          ts_taskdescription,",
						"          scheduledstart,",
						"          onlinemeetingjoinurl,",
						"          ts_notes,",
						"          ts_opportunitiesdiscussed,",
						"          ts_sectorscoveredbyfirm,",
						"          ts_originationcommentsnotes,",
						"          ts_taskduedate,",
						"          ts_sectorscoveredids,",
						"          location,",
						"          scheduleddurationminutes",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MeetingsCleanselect",
						"ContactsIn select(mapColumn(",
						"          Id,",
						"          ts_recommendationofindividual,",
						"          gendercode,",
						"          paymenttermscode,",
						"          ts_vendortargettrackingrole,",
						"          address1_shippingmethodcode,",
						"          preferredcontactmethodcode,",
						"          ts_capabilitiesofindividual,",
						"          familystatuscode,",
						"          xpd_availability,",
						"          address1_freighttermscode,",
						"          xpd_montagulevel,",
						"          ts_permanentinterim,",
						"          ts_ircontactrole,",
						"          xpd_level,",
						"          ts_languagesspokenwritten,",
						"          ts_montaguoffice,",
						"          ts_roletypes,",
						"          xpd_specialisms,",
						"          xpd_function,",
						"          ts_producttype,",
						"          ts_productsinterestedin,",
						"          donotpostalmail,",
						"          ts_centralrelationshipmanager,",
						"          creditonhold,",
						"          xpd_benchcandidate,",
						"          donotsendmm,",
						"          donotbulkemail,",
						"          followemail,",
						"          xpd_available,",
						"          donotfax,",
						"          donotphone,",
						"          donotemail,",
						"          ts_recommendedby,",
						"          transactioncurrencyid,",
						"          originatingleadid,",
						"          xpd_homecountry,",
						"          creditlimit,",
						"          telephone2,",
						"          salutation,",
						"          ts_reportingemail,",
						"          ts_otherlanguages,",
						"          birthdate,",
						"          spousesname,",
						"          xpd_compensationdate,",
						"          anniversary,",
						"          ts_recommendationcomments,",
						"          ts_usesspeciality,",
						"          xpd_hrcompensation,",
						"          ts_currentbonusandorupliftconsiderations,",
						"          ts_compensation,",
						"          emailaddress2,",
						"          ts_investmentcafeid,",
						"          ts_lastmet,",
						"          ts_tone,",
						"          xpd_hrcurrentbonusandorupliftconsiderations,",
						"          lastusedincampaign,",
						"          ts_geographicspeciality,",
						"          xpd_availablefrom,",
						"          xpd_recommendingportco,",
						"          contactid,",
						"          ts_sectorspeciality",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> contactscleanselect",
						"OriginationOpportunityIn select(mapColumn(",
						"          Id,",
						"          ts_actionstatus,",
						"          ts_producttype,",
						"          ts_internalintermediarysource,",
						"          ts_currentactivity,",
						"          ts_opportunitystatus,",
						"          ts_montaguprimaryoffice,",
						"          ts_opportunitytype,",
						"          ts_posthumstatus,",
						"          ts_choppedreason,",
						"          ts_duplicateopportunityfordiscussion,",
						"          mpe_smalltarget,",
						"          xpd_includeonallpapers,",
						"          ts_sold,",
						"          xpd_sharepointlocationcreated,",
						"          ts_buyer,",
						"          mpe_productid,",
						"          ts_targetbusiness,",
						"          ts_firstreferralcompany,",
						"          ts_montaguowner,",
						"          ts_firstreferralcontact,",
						"          transactioncurrencyid,",
						"          ts_managerwedback,",
						"          ts_country,",
						"          ownerid,",
						"          ts_estebitda,",
						"          ts_estebit,",
						"          ts_estdealsize,",
						"          ts_estturnover,",
						"          ts_nextsteps,",
						"          ts_buyerpaidxltmebitda,",
						"          ts_opportunitystage,",
						"          ts_choppedcomments,",
						"          ts_datedealannounced,",
						"          ts_name,",
						"          ts_weofferedxltmebitda,",
						"          ts_companyid,",
						"          ts_choppeddate,",
						"          mpe_carveout,",
						"          mpe_targetbusiness_parentid",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrigiopportCleanout",
						"AccountIn select(mapColumn(",
						"          Id,",
						"          ts_primarysecondaryfocus,",
						"          xpd_relationshipstatus,",
						"          ts_introducertype,",
						"          xpd_remindermonths,",
						"          ts_portfoliocompanystatus,",
						"          ts_companytype,",
						"          ts_vendorsummary,",
						"          xpd_publictoprivatetracker,",
						"          xpd_setreminder,",
						"          ts_trackcompany,",
						"          parentaccountid,",
						"          xpd_reminderto,",
						"          ts_headofficeid,",
						"          ts_originationlead1,",
						"          ts_originationlead2,",
						"          ts_currentauditor,",
						"          ts_othernotes,",
						"          xpd_relationshipcomments,",
						"          ts_formername,",
						"          ts_mpeapproachstrategy,",
						"          ts_lastdatestatuschanged,",
						"          xpd_relationshipstatuschangeddate,",
						"          ts_companylegalname,",
						"          ts_companynumber,",
						"          ts_monthlyreviewmeetingname,",
						"          ts_originationcomments,",
						"          ts_capitaliqlink,",
						"          xpd_datereminderwasset,",
						"          ts_reminderdatesetto,",
						"          ts_alias,",
						"          xpd_reasonaction,",
						"          ts_relevantsituations,",
						"          ts_dealstageofmostrecentopportunity",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AccountsSelectClean",
						"OriginationOpportunityIn, OutputEnrichedOrigination join(OriginationOpportunityIn@Id == OutputEnrichedOrigination@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'right')~> Originationjoinoutput",
						"EnrichedAccount select(mapColumn(",
						"          Id,",
						"          stateAZLabel = stateAZlabel,",
						"          statusAZLabel = statusAZlabel,",
						"          customertypeAZLabel = customertypeAZlabel,",
						"          address1_addresstypeAZLabel = address1_addresstypeAZlabel,",
						"          accountclassificationAZLabel = accountclassificationAZlabel,",
						"          preferredappointmenttimeAZLabel = preferredappointmenttimeAZlabel,",
						"          address2_freighttermsAZLabel = address2_freighttermsAZlabel,",
						"          accountcategoryAZLabel = accountcategoryAZlabel,",
						"          paymenttermsAZLabel = paymenttermsAZlabel,",
						"          preferredappointmentdayAZLabel = preferredappointmentdayAZlabel,",
						"          businesstypeAZLabel = businesstypeAZlabel,",
						"          industryAZLabel = industryAZlabel,",
						"          address1_shippingmethodAZLabel = address1_shippingmethodAZlabel,",
						"          customersizeAZLabel = customersizeAZlabel,",
						"          preferredcontactmethodAZLabel = preferredcontactmethodAZlabel,",
						"          accountratingAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address2_shippingmethodAZlabel,",
						"          ownershipAZlabel,",
						"          territoryAZlabel,",
						"          shippingmethodAZlabel,",
						"          address1_freighttermsAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> EnrichedAccountSelect",
						"EnrichedOriginationOpportunities select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedOrigination",
						"EnrichedMeetingAppointments select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel,",
						"          instancetypeAZlabel,",
						"          priorityAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedMeetingAppointments",
						"EnrichedContacts select(mapColumn(",
						"          Id,",
						"          stateAZlabel,",
						"          statusAZlabel,",
						"          haschildrenAZlabel,",
						"          customertypeAZlabel,",
						"          genderAZlabel,",
						"          address1_addresstypeAZlabel,",
						"          leadsourceAZlabel,",
						"          preferredappointmenttimeAZlabel,",
						"          address2_freighttermsAZlabel,",
						"          address2_shippingmethodAZlabel,",
						"          paymenttermsAZlabel,",
						"          accountroleAZlabel,",
						"          territoryAZlabel,",
						"          address3_freighttermsAZlabel,",
						"          address1_shippingmethodAZlabel,",
						"          preferredappointmentdayAZlabel,",
						"          customersizeAZlabel,",
						"          preferredcontactmethodAZlabel,",
						"          address3_shippingmethodAZlabel,",
						"          address2_addresstypeAZlabel,",
						"          address3_addresstypeAZlabel,",
						"          familystatusAZlabel,",
						"          shippingmethodAZlabel,",
						"          educationAZlabel,",
						"          address1_freighttermsAZlabel",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OutputEnrichedContacts",
						"MeetingsAppointmentsIn, EnrichedMeetingAppointments join(MeetingsAppointmentsIn@Id == EnrichedMeetingAppointments@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> AppointmentsJoinOutput",
						"ContactsIn, EnrichedContacts join(ContactsIn@Id == EnrichedContacts@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContactsJoin",
						"AccountIn, EnrichedAccountSelect join(AccountIn@Id == EnrichedAccountSelect@Id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'off',",
						"     scoreColumn: 'AZlabel')~> AccountEnrichedJoin",
						"AccountEnrichedJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AccountCleanSink",
						"AppointmentsJoinOutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> MeetingStageCleanSink",
						"ContactsJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ContactsStageCleanSink",
						"Originationjoinoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OriginationCleanSink",
						"OutputEnrichedOrigination sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedOrigination",
						"EnrichedAccountSelect sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedAccount",
						"OutputEnrichedMeetingAppointments sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedMeeting",
						"OutputEnrichedContacts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false) ~> SinkEnrichedContacts"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]",
				"[concat(variables('factoryId'), '/datasets/AccountTable')]",
				"[concat(variables('factoryId'), '/datasets/Appointment')]",
				"[concat(variables('factoryId'), '/datasets/Contacttable')]",
				"[concat(variables('factoryId'), '/datasets/OriginationOpp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "EnrichedDatabase",
								"type": "LinkedServiceReference"
							},
							"name": "Accounts"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'synapseanalytics',",
						"     schemaName: 'dbo',",
						"     tableName: 'systemuser',",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     staged: false) ~> Accounts",
						"Accounts select(skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EnrichedDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ADLSProdEndpoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ADLSProdEndpoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ADLSProdEndpoint_properties_groupId')]",
				"fqdns": "[parameters('ADLSProdEndpoint_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureDataLakeStorageMEP4')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureDataLakeStorageMEP4_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureDataLakeStorageMEP4_properties_groupId')]",
				"fqdns": "[parameters('AzureDataLakeStorageMEP4_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabaseMEP2')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabaseMEP2_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabaseMEP2_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSynapseAnalytics802MEP')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSynapseAnalytics802MEP_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSynapseAnalytics802MEP_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_blob')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_blob_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_blob_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_blob_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_namespace')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_namespace_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_namespace_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_namespace_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/Purviewendpointstest_queue')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('Purviewendpointstest_queue_properties_privateLinkResourceId')]",
				"groupId": "[parameters('Purviewendpointstest_queue_properties_groupId')]",
				"fqdns": "[parameters('Purviewendpointstest_queue_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-custstgacct--prod-synapse-uks-001-prodlakeaccuks01_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-custstgacct--test-ws-synapse-uks-01-testdatalakeuks01_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--prod-synapse-uks-001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--prod-synapse-uks-001_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sql--test-ws-synapse-uks-01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sql--test-ws-synapse-uks-01_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--prod-synapse-uks-001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--prod-synapse-uks-001_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/synapse-ws-sqlOnDemand--test-ws-synapse-uks-01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_groupId')]",
				"fqdns": "[parameters('synapse-ws-sqlOnDemand--test-ws-synapse-uks-01_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}