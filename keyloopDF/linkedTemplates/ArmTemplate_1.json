{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "keyloopDF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_ALDS_RAW_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "/@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": "root"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AnalyticsHub_DYN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_AnalyticsHub",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Process",
					"table": "ProcessStatus"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_Landing_DYN_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_Landing_DYN_ZIP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BLOB_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Path": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Metadata_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "config"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Application"
					}
				},
				"folder": {
					"name": "Framework"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DYN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_PretBIReference",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lne')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_n7v')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_nyc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_t7r')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_wzj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "testcontainer"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoggingStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*",
						"folderPath": "RAW/LOGGING",
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/B2E_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "ENR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Enrichment Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "B2E_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T14:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DYN_EnrToCurated_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "CUR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Curation Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DBX_EnrichToCurated_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											},
											"Region": {
												"value": "@pipeline().parameters.Region",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Region": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-11-25T12:53:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/E2C_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": null
									},
									"ParentProcessID": {
										"type": "Int32",
										"value": null
									},
									"ProcessFilter": {
										"type": "String",
										"value": "%"
									},
									"Stage": {
										"type": "String",
										"value": "ENR"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Enrichment Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Clone_B2E_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"StageName": {
												"value": "@item().StageName",
												"type": "Expression"
											},
											"EntityStageID": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"ProcessID": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - NewEnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T10:12:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Pret"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-22T20:59:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_BINARY')]",
				"[concat(variables('factoryId'), '/datasets/DS_ALDS_RAW_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_File_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set vSetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set vSetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": {
										"value": "@if(equals(variables('RecursiveFlag'),'1'), 1, 0)",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')), concat('*.',pipeline().parameters.FileFormat), concat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Path": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Pret"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T16:25:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_BINARY')]",
				"[concat(variables('factoryId'), '/datasets/DS_ALDS_RAW_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy Table to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',pipeline().parameters.Domain,'.',pipeline().parameters.TableName)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_RAW1",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									},
									"Entity": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy Table to Lake').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Table to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string"
					},
					"FileFormat": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Pret"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-20T14:26:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Zip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SetFileMask",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilenameMask",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'FilenameMask'),0),pipeline().parameters.Config.FilenameMask,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetRecursiveFlag",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RecursiveFlag",
							"value": {
								"value": "@if(greater(indexof(string(pipeline().parameters.Config),'RecursiveFlag'),0),pipeline().parameters.Config.RecursiveFlag,'')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy File to Archive BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetFileMask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetRecursiveFlag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@concat(pipeline().parameters.Path,'/Archive')",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File to Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy File to Archive BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@if(empty(variables('FilenameMask')),\nconcat('*.',pipeline().parameters.FileFormat),\nconcat(variables('FilenameMask'),toLower(pipeline().parameters.FileFormat)))",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BLOB_Landing_DYN_ZIP",
								"type": "DatasetReference",
								"parameters": {
									"Path": {
										"value": "@pipeline().parameters.Path",
										"type": "Expression"
									},
									"Container": {
										"value": "@pipeline().parameters.PathRoute",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ALDS_RAW_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@{pipeline().parameters.Zone}/@{pipeline().parameters.Classification}/@{pipeline().parameters.Area}/@{pipeline().parameters.Domain}/@{pipeline().parameters.TableName}/@{pipeline().parameters.Version}/Year=@{pipeline().parameters.Year}/Month=@{pipeline().parameters.Month}/Day=@{pipeline().parameters.Day}/Time=@{pipeline().parameters.Time}",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsCopied",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Copy File to Lake').output.filesRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy File to Lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process From Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Process Throughput",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "CashSales"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"Month": {
						"type": "string",
						"defaultValue": "11"
					},
					"Day": {
						"type": "string",
						"defaultValue": "02"
					},
					"Area": {
						"type": "string",
						"defaultValue": "MuleSoft"
					},
					"Domain": {
						"type": "string",
						"defaultValue": "StarKis"
					},
					"Classification": {
						"type": "string",
						"defaultValue": "Internal"
					},
					"EntityStageID": {
						"type": "string",
						"defaultValue": "51"
					},
					"ProcessID": {
						"type": "int",
						"defaultValue": 999
					},
					"Version": {
						"type": "string",
						"defaultValue": "1"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string",
						"defaultValue": "00:00"
					},
					"FileFormat": {
						"type": "string",
						"defaultValue": "CSV"
					},
					"Path": {
						"type": "string",
						"defaultValue": "import/starkis/UK"
					},
					"PathRoute": {
						"type": "string"
					},
					"Config": {
						"type": "object"
					}
				},
				"variables": {
					"FilenameMask": {
						"type": "String"
					},
					"RecursiveFlag": {
						"type": "String"
					},
					"UnzipFlag": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Pret"
				},
				"annotations": [],
				"lastPublishTime": "2021-12-13T17:30:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_BINARY')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Landing_DYN_ZIP')]",
				"[concat(variables('factoryId'), '/datasets/DS_ALDS_RAW_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PE_Parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initiate Parent Process",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[InitiateParentLoad]",
								"storedProcedureParameters": {
									"ADFExecution": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"Area": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Area",
											"type": "Expression"
										}
									},
									"EntityStageID": {
										"type": "Int32",
										"value": "-1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Jobs to Run",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Initiate Parent Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[Process].[GetChildProcesses]",
								"storedProcedureParameters": {
									"ParentProcessID": {
										"type": "Int32",
										"value": {
											"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AnalyticsHub_DYN",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Run Child Processes",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Jobs to Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Jobs to Run').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Run Post Execution Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PE_Single",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ProcessId": {
												"value": "@item().ProcessID",
												"type": "Expression"
											},
											"ProcessSubType": {
												"value": "@item().ProcessSubType",
												"type": "Expression"
											},
											"EntityStageId": {
												"value": "@item().EntityStageID",
												"type": "Expression"
											},
											"stageName": {
												"value": "@item().StageName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Finalise Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Parent Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Child Processes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@activity('Initiate Parent Process').output.firstRow.ParentProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Area": {
						"type": "string",
						"defaultValue": "Simphony"
					}
				},
				"folder": {
					"name": "4 - PostExecution"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:52:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AnalyticsHub_DYN')]"
			]
		}
	]
}