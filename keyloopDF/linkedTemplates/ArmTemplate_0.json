{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "keyloopDF"
		},
		"LB_DBX_EngineeringSml_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LB_DBX_EngineeringSml'"
		},
		"LS_ADLS_PRIVATE_DYN_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_PRIVATE_DYN'"
		},
		"LS_BLOB_PRIVATE_DYN_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BLOB_PRIVATE_DYN'"
		},
		"LS_FIVERR_SQL_AnalyticsHub_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_FIVERR_SQL_AnalyticsHub'"
		},
		"LS_Metadata_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Metadata_SQL'"
		},
		"LS_SQL_AnalyticsHub_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_AnalyticsHub'"
		},
		"LS_SQL_PretBIReference_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQL_PretBIReference'"
		},
		"LS_ADLS_PRIVATE_DYN_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlspretbiukadlsdev.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LB_DBX_EngineeringSml')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-965371557165719.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LB_DBX_EngineeringSml_accessToken')]"
					},
					"existingClusterId": "0812-195048-dado171"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_PRIVATE_DYN')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_PRIVATE_DYN_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_PRIVATE_DYN_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BLOB_PRIVATE_DYN')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BLOB_PRIVATE_DYN_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_FIVERR_SQL_AnalyticsHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_FIVERR_SQL_AnalyticsHub_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Metadata_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_Metadata_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_AnalyticsHub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_AnalyticsHub_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_PretBIReference')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_PretBIReference_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-12-13T10:52:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReferenceDataOnceDaily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2021-09-06T16:24:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTables')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-12-13T10:54:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T16:17:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_B2E_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - BaseToEnrich"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-18T21:21:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clone_DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								" CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								" EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBX_EnrichToCurated_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Curation Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsInserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Curation Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Curation Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Curation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"Region": {
						"type": "string"
					}
				},
				"folder": {
					"name": "EnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T09:40:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/E2C_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rowsUpserted",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Enrichment Notebook').Output.runOutput.rowCount",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Enrichment/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.StageName",
									"type": "Expression"
								},
								"processSubType": {
									"value": "@pipeline().parameters.ProcessSubType",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"MultiLine": {
									"value": "False",
									"type": "Boolean"
								},
								"SlicePath": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StageName": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - NewEnrichToCurated"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-19T10:12:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_SourceToRaw_Single_Delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day,'/Time=',pipeline().parameters.Time)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "CashSales"
					},
					"Zone": {
						"type": "string",
						"defaultValue": "RAW"
					},
					"Year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"Month": {
						"type": "string",
						"defaultValue": "11"
					},
					"Day": {
						"type": "string",
						"defaultValue": "02"
					},
					"Area": {
						"type": "string",
						"defaultValue": "MuleSoft"
					},
					"Domain": {
						"type": "string",
						"defaultValue": "StarKis"
					},
					"Classification": {
						"type": "string",
						"defaultValue": "Internal"
					},
					"EntityStageID": {
						"type": "string",
						"defaultValue": "51"
					},
					"ProcessID": {
						"type": "string",
						"defaultValue": "999"
					},
					"Version": {
						"type": "string",
						"defaultValue": "1"
					},
					"SlicePath": {
						"type": "string"
					},
					"Time": {
						"type": "string",
						"defaultValue": "00:00"
					},
					"FileFormat": {
						"type": "string",
						"defaultValue": "CSV"
					},
					"Path": {
						"type": "string",
						"defaultValue": "import/starkis/UK"
					},
					"Config": {
						"type": "object"
					},
					"PathRoute": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0 - Source2Raw/Pret"
				},
				"annotations": [],
				"lastPublishTime": "2021-04-24T21:43:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PE_Single')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Enrichment Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Utilities/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.stageName",
									"type": "Expression"
								},
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Enrichment Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								" ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProcessId": {
						"type": "int"
					},
					"ProcessSubType": {
						"type": "string"
					},
					"EntityStageId": {
						"type": "string"
					},
					"stageName": {
						"type": "string",
						"defaultValue": "POST"
					}
				},
				"folder": {
					"name": "4 - PostExecution"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T10:51:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/R2B_CSV_CleanseCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[StartProcess]",
							"storedProcedureParameters": {
								"ADFExecution": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									}
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run Cleanse CSV",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "/Hydr8 Framework/Validation/@{pipeline().parameters.ProcessSubType}",
								"type": "Expression"
							},
							"baseParameters": {
								"processId": {
									"value": "@string(pipeline().parameters.ProcessID)",
									"type": "Expression"
								},
								"entityStageId": {
									"value": "@string(pipeline().parameters.EntityStageID)",
									"type": "Expression"
								},
								"stageName": {
									"value": "@pipeline().parameters.Zone",
									"type": "Expression"
								},
								"entityName": {
									"value": "@pipeline().parameters.TableName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LB_DBX_EngineeringSml",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Finalise Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Cleanse CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FinaliseProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail Process",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Run Cleanse CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[FailProcess]",
							"storedProcedureParameters": {
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Good",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "goodRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.goodRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Add Dependencies to Queue",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[InitiateDependency]",
							"storedProcedureParameters": {
								"EntityStageID": {
									"value": {
										"value": "@pipeline().parameters.EntityStageID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SlicePath": {
									"value": {
										"value": "@concat('Year=',pipeline().parameters.Year,'/Month=',pipeline().parameters.Month,'/Day=',pipeline().parameters.Day)",
										"type": "Expression"
									},
									"type": "String"
								},
								"MultiLine": {
									"value": "0"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Reject",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "rejectedRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.rejectedRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - Total",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "totalRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.totalRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - DuplicateRows",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "duplicateRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.duplicateRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Process Throughput - validRows",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Finalise Process",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Process].[LogThroughput]",
							"storedProcedureParameters": {
								"CountName": {
									"value": "validRows",
									"type": "String"
								},
								"CountValue": {
									"value": {
										"value": "@activity('Run Cleanse CSV').Output.runOutput.validRows",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessID": {
									"value": {
										"value": "@pipeline().parameters.ProcessID",
										"type": "Expression"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQL_AnalyticsHub",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"Zone": {
						"type": "string"
					},
					"Year": {
						"type": "string"
					},
					"Month": {
						"type": "string"
					},
					"Day": {
						"type": "string"
					},
					"Area": {
						"type": "string"
					},
					"Domain": {
						"type": "string"
					},
					"Classification": {
						"type": "string"
					},
					"EntityStageID": {
						"type": "int"
					},
					"ProcessID": {
						"type": "int"
					},
					"Version": {
						"type": "string"
					},
					"ProcessSubType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - RawToBase"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-20T14:12:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AnalyticsHub')]",
				"[concat(variables('factoryId'), '/linkedServices/LB_DBX_EngineeringSml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_RAW1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"Entity": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "/@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ALDS_RAW_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_PRIVATE_DYN",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "/@{dataset().Directory}",
							"type": "Expression"
						},
						"fileSystem": "root"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_PRIVATE_DYN')]"
			]
		}
	]
}